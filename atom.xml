<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wdam</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-13T09:52:33.524Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Wdam</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小程序限制输入内容为数字</title>
    <link href="http://example.com/2022/06/13/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%99%90%E5%88%B6%E8%BE%93%E5%85%A5%E4%B8%BA%E6%95%B0%E5%AD%97/"/>
    <id>http://example.com/2022/06/13/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%99%90%E5%88%B6%E8%BE%93%E5%85%A5%E4%B8%BA%E6%95%B0%E5%AD%97/</id>
    <published>2022-06-13T09:04:21.789Z</published>
    <updated>2022-06-13T09:52:33.524Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">:type</span>=<span class="string">&quot;inputType&quot;</span> <span class="attr">focus</span> <span class="attr">:maxlength</span>=<span class="string">&quot;lattice&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input_info&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;inputVal&quot;</span> @<span class="attr">blur</span>=<span class="string">&quot;blur&quot;</span> @<span class="attr">focus</span>=<span class="string">&quot;focus&quot;</span> /&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">data:&#123;</span><br><span class="line">    <span class="attr">lattice</span>:<span class="number">6</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line">  <span class="function"><span class="title">inputVal</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line"><span class="comment">//#ifdef MP-WEIXIN</span></span><br><span class="line"><span class="keyword">let</span> keyCode = e.detail.keyCode</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.inputValues.length&lt;<span class="number">6</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(keyCode === <span class="number">8</span> &amp;&amp; <span class="built_in">this</span>.inputValues.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                        <span class="comment">//处理删除键</span></span><br><span class="line"><span class="built_in">this</span>.inputValues.pop()</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(keyCode&lt;<span class="number">48</span> || keyCode&gt;<span class="number">57</span>)&#123;</span><br><span class="line">                            <span class="comment">//限制输入0-9</span></span><br><span class="line">uni.showToast(&#123;</span><br><span class="line"><span class="attr">icon</span>:<span class="string">&quot;none&quot;</span>,</span><br><span class="line"><span class="attr">title</span>:<span class="string">&#x27;请输入数字&#x27;</span>,</span><br><span class="line"><span class="attr">duration</span>:<span class="number">1000</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.keyCodeArr.push(keyCode)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.keyCodeArr.length &lt;<span class="number">6</span>)&#123;</span><br><span class="line">                                <span class="comment">//如果数字输入内容不够6位就凑6位</span></span><br><span class="line"><span class="built_in">this</span>.lattice +=<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span>codeObj = &#123;</span><br><span class="line"><span class="string">&#x27;48&#x27;</span>:<span class="string">&#x27;0&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;49&#x27;</span>:<span class="string">&#x27;1&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;50&#x27;</span>:<span class="string">&#x27;2&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;51&#x27;</span>:<span class="string">&#x27;3&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;52&#x27;</span>:<span class="string">&#x27;4&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;53&#x27;</span>:<span class="string">&#x27;5&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;54&#x27;</span>:<span class="string">&#x27;6&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;55&#x27;</span>:<span class="string">&#x27;7&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;56&#x27;</span>:<span class="string">&#x27;8&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;57&#x27;</span>:<span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.inputValues.push(codeObj[keyCode])</span><br><span class="line"><span class="built_in">this</span>.$emit(<span class="string">&#x27;getInputVerification&#x27;</span>, <span class="built_in">this</span>.inputValues.join(<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">                            <span class="comment">//抛出结果</span></span><br><span class="line"><span class="comment">// console.log(this.inputValues)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(keyCode === <span class="number">8</span> &amp;&amp; <span class="built_in">this</span>.inputValues.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="comment">//如果多于6位时</span></span><br><span class="line"><span class="built_in">this</span>.inputValues.pop()</span><br><span class="line"><span class="keyword">return</span> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//#endif</span></span><br><span class="line"><span class="comment">//#ifdef APP || H5</span></span><br><span class="line"><span class="built_in">this</span>.inputValues = e.detail.value;</span><br><span class="line"><span class="built_in">this</span>.$emit(<span class="string">&#x27;getInputVerification&#x27;</span>, <span class="built_in">this</span>.inputValues);</span><br><span class="line"><span class="comment">//#endif</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;figure class=&quot;highlight html&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1</summary>
      
    
    
    
    
    <category term="-小程序" scheme="http://example.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>新建对象数组和分类</title>
    <link href="http://example.com/2022/05/16/%E6%96%B0%E5%BB%BA%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%86%E7%B1%BB/"/>
    <id>http://example.com/2022/05/16/%E6%96%B0%E5%BB%BA%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%86%E7%B1%BB/</id>
    <published>2022-05-16T09:20:20.917Z</published>
    <updated>2022-05-17T07:15:10.683Z</updated>
    
    <content type="html"><![CDATA[<p>对象数组分类</p><span id="more"></span><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//人员分类</span></span><br><span class="line"><span class="function"><span class="title">empClassific</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> dataArr = []</span><br><span class="line">arr.map(<span class="function"><span class="params">mapItem</span> =&gt;</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dataArr.length == <span class="number">0</span>)&#123;</span><br><span class="line">dataArr.push(&#123;<span class="attr">status</span>:mapItem.status,<span class="attr">List</span>:[mapItem]&#125;)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">let</span> res = dataArr.some(<span class="function"><span class="params">item</span> =&gt;</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(item.status == mapItem.status)&#123;</span><br><span class="line">item.List.push(mapItem)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span>(!res)&#123;</span><br><span class="line">dataArr.push(&#123;<span class="attr">status</span>:mapItem.status,<span class="attr">List</span>:[mapItem]&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(dataArr)</span><br><span class="line"><span class="keyword">return</span> dataArr</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></div></figure><p>建立新的对象数组</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> coauther = [];</span><br><span class="line">   <span class="keyword">if</span> (jsonData != <span class="literal">null</span>) &#123;</span><br><span class="line">       <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; jsonData.CoauthorResearchers.length; i++) &#123;</span><br><span class="line">           <span class="keyword">var</span> circle = &#123;&#125;;</span><br><span class="line">           circle.name = jsonData.CoauthorResearchers[i].NameCN;</span><br><span class="line">           circle.radiu = <span class="built_in">eval</span>(jsonData.CoauthorResearchers[i].PaperTotal);</span><br><span class="line">           circle.size = <span class="built_in">eval</span>(jsonData.CoauthorResearchers[i].CoAuthorPaper);</span><br><span class="line">           coauther.push(circle);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;对象数组分类&lt;/p&gt;</summary>
    
    
    
    
    <category term="-对象数组" scheme="http://example.com/tags/%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>input组件通讯</title>
    <link href="http://example.com/2022/05/12/vue2%20input%E9%80%9A%E4%BF%A1/"/>
    <id>http://example.com/2022/05/12/vue2%20input%E9%80%9A%E4%BF%A1/</id>
    <published>2022-05-12T01:48:49.465Z</published>
    <updated>2022-05-12T07:38:19.051Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>父组件</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;newLocation v-model=&quot;testvalue&quot;&gt;&lt;/newLocation&gt;</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">testvalue:&#x27;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></div></figure><p>子组件</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; :value=&quot;value&quot; @input=&quot;$emit(&#x27;input&#x27;, $event.target.value)&quot;&gt;</span><br><span class="line">props:&#123;</span><br><span class="line">    value:&#123;</span><br><span class="line">                type: String,</span><br><span class="line">                dafault:&#x27;&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;父组件&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/05/11/%E8%BD%AE%E8%AE%AD%E6%9F%A5%E6%89%BE%E5%9C%B0%E5%8C%BA%E4%BB%A3%E7%A0%81/"/>
    <id>http://example.com/2022/05/11/%E8%BD%AE%E8%AE%AD%E6%9F%A5%E6%89%BE%E5%9C%B0%E5%8C%BA%E4%BB%A3%E7%A0%81/</id>
    <published>2022-05-11T09:58:20.356Z</published>
    <updated>2022-05-12T02:04:07.605Z</updated>
    
    <content type="html"><![CDATA[<p>轮训查找地区代码</p><span id="more"></span><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;view class=&quot;content&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;门店名称&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot;&gt;&lt;input type=&quot;text&quot; placeholder=&quot;请输入门店名称&quot; v-model=&quot;data.storeObject.storeName&quot; /&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;联系人电话&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot;&gt;&lt;input type=&quot;text&quot; placeholder=&quot;请输入联系人电话&quot; v-model=&quot;data.storeObject.contactPhone&quot; /&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;门店LOGO&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot;&gt;</span><br><span class="line">&lt;JeepayUpLoad</span><br><span class="line">:isShowClear=&quot;!isDisable&quot;</span><br><span class="line">:imgUrl=&quot;data.storeObject.storeLogo&quot;</span><br><span class="line">@uploadSuccess=&quot;uploadSuccess($event, &#x27;storeLogo&#x27;)&quot;</span><br><span class="line">@clear=&quot;clear(&#x27;storeLogo&#x27;)&quot;</span><br><span class="line">&gt;&lt;/JeepayUpLoad&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;门头照&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot;&gt;</span><br><span class="line">&lt;JeepayUpLoad</span><br><span class="line">:isShowClear=&quot;!isDisable&quot;</span><br><span class="line">:imgUrl=&quot;data.storeObject.storeOuterImg&quot;</span><br><span class="line">@uploadSuccess=&quot;uploadSuccess($event, &#x27;storeOuterImg&#x27;)&quot;</span><br><span class="line">@clear=&quot;clear(&#x27;storeOuterImg&#x27;)&quot;</span><br><span class="line">&gt;&lt;/JeepayUpLoad&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;门店内景照&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot;&gt;</span><br><span class="line">&lt;JeepayUpLoad</span><br><span class="line">:isShowClear=&quot;!isDisable&quot;</span><br><span class="line">:imgUrl=&quot;data.storeObject.storeInnerImg&quot;</span><br><span class="line">@uploadSuccess=&quot;uploadSuccess($event, &#x27;storeInnerImg&#x27;)&quot;</span><br><span class="line">@clear=&quot;clear(&#x27;storeInnerImg&#x27;)&quot;</span><br><span class="line">&gt;&lt;/JeepayUpLoad&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;门店省/市/区&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot; style=&quot;width: 75%; justify-content: flex-end;&quot;&gt;</span><br><span class="line">&lt;uni-data-picker</span><br><span class="line">:localdata=&quot;address&quot;</span><br><span class="line">v-model=&quot;data.storeObject.areaCode&quot;</span><br><span class="line">:value=&quot;data.storeObject.areaCode ? data.storeObject.areaCode[2] : &#x27;&#x27;&quot;</span><br><span class="line">@change=&quot;addressChange&quot;</span><br><span class="line">v-slot:default=&quot;&#123;data&#125;&quot;</span><br><span class="line">preload=&quot;true&quot;</span><br><span class="line">&gt;</span><br><span class="line">&#123;&#123; data.length != 0 ? dataPicker(data) : &#x27;请选择&#x27; &#125;&#125;</span><br><span class="line">&lt;/uni-data-picker&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;详细地址&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot;&gt;</span><br><span class="line">&lt;textarea auto-height=&quot;true&quot; type=&quot;text&quot; placeholder=&quot;门店详细地址&quot; v-model=&quot;data.storeObject.address&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;image src=&quot;../../static/indexImg/position.svg&quot; @tap=&quot;getAddress&quot;&gt;&lt;/image&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item&quot; v-if=&quot;data.storeObject.sign == 1&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;门店编号&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot;&gt;&lt;input class=&quot;number-text&quot; :disabled=&quot;&#x27;true&#x27;&quot; type=&quot;text&quot; placeholder=&quot;请输入门店编号&quot; v-model=&quot;data.storeId&quot; /&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item switch-item&quot; v-if=&quot;data.sign == 1&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;是否为默认&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot;&gt;</span><br><span class="line">&lt;view class=&quot;state&quot;&gt;</span><br><span class="line">&lt;text v-if=&quot;data.storeObject.defaultFlag === 1&quot;&gt;是&lt;/text&gt;</span><br><span class="line">&lt;text v-if=&quot;data.storeObject.defaultFlag === 0&quot;&gt;否&lt;/text&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;switch&quot; v-if=&quot;data.storeObject.defaultFlag === 0&quot;&gt;</span><br><span class="line">&lt;switch :checked=&quot;data.storeObject.defaultFlag === 0 ? false : true&quot; @change=&quot;switchChange($event)&quot; color=&quot;#0041C4&quot; /&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-item&quot;&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-left&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;&lt;text&gt;备注&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-list-right&quot;&gt;&lt;input type=&quot;text&quot; placeholder=&quot;请输入备注&quot; v-model=&quot;data.storeObject.remark&quot; /&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;jee-button&quot; @tap=&quot;save&quot;&gt;&lt;text&gt;保存&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;uni-popup ref=&quot;switchPopup&quot; type=&quot;dialog&quot;&gt;</span><br><span class="line">&lt;view class=&quot;swiper-item&quot;&gt;</span><br><span class="line">&lt;view class=&quot;title&quot;&gt;</span><br><span class="line">&lt;text&gt;&#123;&#123; data.tips &#125;&#125;&lt;/text&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;buttons&quot;&gt;</span><br><span class="line">&lt;view class=&quot;cancel&quot; @tap=&quot;cancel&quot;&gt;&lt;text&gt;取消&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;confirm&quot; @tap=&quot;confirm&quot;&gt;&lt;text&gt;确认更改&lt;/text&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/uni-popup&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref, reactive &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; $addMchStore, $updateMchStore, $getMchStoreDetail &#125; from &#x27;../../http/apiManager.js&#x27;;</span><br><span class="line">import &#123; onLoad &#125; from &#x27;@dcloudio/uni-app&#x27;;</span><br><span class="line">import address from &#x27;../../components/address.json&#x27;; // 地址</span><br><span class="line">import JeepayUpLoad from &#x27;../../components/JeepayUpLoad/JeepayUpLoad.vue&#x27;; // 图片上传</span><br><span class="line">let pickerdata = ref(&#x27;&#x27;)</span><br><span class="line">let data = reactive(&#123;</span><br><span class="line">storeObject: &#123;&#125;, //传递过来的store对象</span><br><span class="line">sign: true, //是否是新增页面</span><br><span class="line">tips: &#x27;更改后会顶替已有的默认门店，确定更改吗？&#x27;,</span><br><span class="line">latitude: &#x27;&#x27;, //纬度</span><br><span class="line">longitude: &#x27;&#x27;, //经度</span><br><span class="line">location: &#x27;&#x27; ,//经纬度</span><br><span class="line">address:&#x27;&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">const switchPopup = ref();</span><br><span class="line">onLoad(options =&gt; &#123;</span><br><span class="line"></span><br><span class="line">data.storeObject = JSON.parse(options.storeObject);</span><br><span class="line">data.sign = options.sign;</span><br><span class="line">if (data.sign == 0) &#123;</span><br><span class="line">uni.setNavigationBarTitle(&#123;</span><br><span class="line">title: &#x27;新建门店&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">data.storeObject = &#123;&#125;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">uni.setNavigationBarTitle(&#123;</span><br><span class="line">title: &#x27;编辑门店&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">data.storeId = data.storeObject.storeId;</span><br><span class="line">$getMchStoreDetail(data.storeId).then(res =&gt; &#123;</span><br><span class="line">data.storeObject = res.bizData;</span><br><span class="line">console.log(res.bizData)</span><br><span class="line">&#125;);</span><br><span class="line">if (data.storeObject.lng &amp;&amp; data.storeObject.lat) &#123;</span><br><span class="line">data.location = data.storeObject.lng + &#x27;/&#x27; + data.storeObject.lat;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">data.location = &#x27;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">function switchChange(e) &#123;</span><br><span class="line">data.storeObject.defaultFlag = e.detail.value;</span><br><span class="line">if (e.detail.value) &#123;</span><br><span class="line">data.storeObject.defaultFlag = 1;</span><br><span class="line">switchPopup.value.open();</span><br><span class="line">data.tips = &#x27;更改后会顶替已有的默认门店，确定更改吗？&#x27;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">data.storeObject.defaultFlag = 0;</span><br><span class="line">switchPopup.value.open();</span><br><span class="line">data.tips = &#x27;禁用后将会没有默认门店，确定更改吗？&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function getAddress() &#123;</span><br><span class="line">let reg = /.+?(省|市|自治区|自治州|县|区)/g</span><br><span class="line">let areaCode //省市区数组</span><br><span class="line"> uni.chooseLocation(&#123;</span><br><span class="line">latitude:data.latitude?data.latitude:data.storeObject.lat,</span><br><span class="line">longitude:data.longitude?data.longitude:data.storeObject.lng,</span><br><span class="line">success: function(res) &#123;</span><br><span class="line">data.storeObject.lng = res.longitude;</span><br><span class="line">data.storeObject.lat = res.latitude;</span><br><span class="line">data.storeObject.location = res.longitude + &#x27;/&#x27; + res.latitude;</span><br><span class="line">data.storeObject.address = res.address;</span><br><span class="line">areaCode =  res.address.match(reg);</span><br><span class="line">areaInfo(areaCode); </span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * 通过选择的城市开始定位</span><br><span class="line">   */</span><br><span class="line">    async function areaInfo(areaCode)&#123;</span><br><span class="line">   const btcsObj =&#123;</span><br><span class="line">   &#x27;110000&#x27;:&#x27;110100&#x27;,</span><br><span class="line">   &#x27;120000&#x27;:&#x27;120100&#x27;,</span><br><span class="line">   &#x27;310000&#x27;:&#x27;310100&#x27;,</span><br><span class="line">   &#x27;500000&#x27;:&#x27;500100&#x27;</span><br><span class="line">   &#125; </span><br><span class="line">   if(areaCode.length &gt;= 4)&#123;</span><br><span class="line">   areaCode.splice(3,areaCode.length-1)</span><br><span class="line">   &#125;</span><br><span class="line">   //把地区数组转换为数字数组</span><br><span class="line">   data.storeObject.areaCode = []</span><br><span class="line">   let promises = areaCode.map((item,index) =&gt;&#123;</span><br><span class="line">   return gaodeMap(item)</span><br><span class="line">   &#125;)</span><br><span class="line">   Promise.all(promises).then(allData =&gt;&#123;</span><br><span class="line">   //直辖市补位</span><br><span class="line">   if(allData[0] in btcsObj)&#123;</span><br><span class="line">   allData.splice(1,0,btcsObj[allData[0]])</span><br><span class="line">   &#125;</span><br><span class="line">   console.log(allData)</span><br><span class="line">   data.storeObject.areaCode = allData</span><br><span class="line">   city = []</span><br><span class="line">   &#125;)</span><br><span class="line">   &#125;</span><br><span class="line">   /**</span><br><span class="line"></span><br><span class="line"> * @param &#123;String &#125; 地址和类型码1、2</span><br><span class="line"></span><br><span class="line"> * @return &#123;string&#125; 地址代码或者坐标</span><br><span class="line"></span><br><span class="line"> * */</span><br><span class="line">   let city = []</span><br><span class="line">   function gaodeMap(item,type =1)&#123;</span><br><span class="line">   city.push(item)</span><br><span class="line">   return new Promise((resolve,reject) =&gt;&#123;</span><br><span class="line">   uni.request(&#123;</span><br><span class="line">   url: &#x27;https://restapi.amap.com/v3/geocode/geo&#x27;, // 调用高德接口</span><br><span class="line">   data: &#123;</span><br><span class="line">   key: &#x27;1e558c3dc1ce7ab2a0b332d78fcd4c16&#x27;,</span><br><span class="line">   address: city.length?city.join():item</span><br><span class="line">   &#125;,</span><br><span class="line">    success:  res =&gt; &#123;</span><br><span class="line">   if(res.data.status === &#x27;1&#x27; &amp;&amp; type === 1)&#123;</span><br><span class="line">    resolve(res.data.geocodes[0].adcode)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">   &#125;else if(res.data.status === &#x27;1&#x27; &amp;&amp; type === 2)&#123;</span><br><span class="line">   data.longitude = res.data.geocodes[0].location.split(&#x27;,&#x27;)[0] //经度</span><br><span class="line">   data.latitude = res.data.geocodes[0].location.split(&#x27;,&#x27;)[1] //维度</span><br><span class="line">   resolve()</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   fail:err =&gt; &#123;console.log(err)</span><br><span class="line">   reject(err)</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;);</span><br><span class="line"></span><br><span class="line">   &#125;)</span><br><span class="line">   &#125;</span><br><span class="line">   function cancel() &#123;</span><br><span class="line">   switchPopup.value.close();</span><br><span class="line">   if (data.storeObject.defaultFlag) &#123;</span><br><span class="line">   data.storeObject.defaultFlag = 0;</span><br><span class="line">   &#125; else &#123;</span><br><span class="line">   data.storeObject.defaultFlag = 1;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">function confirm() &#123;</span><br><span class="line">switchPopup.value.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 选择地址</span><br><span class="line">function addressChange(e) &#123;</span><br><span class="line">console.log(e)</span><br><span class="line">data.storeObject.areaCode = [];</span><br><span class="line">let addressInfo = []</span><br><span class="line">e.detail.value.forEach(item =&gt; &#123;</span><br><span class="line">data.storeObject.areaCode.push(item.value); // 地址码赋值</span><br><span class="line">addressInfo.push(item.text)</span><br><span class="line">&#125;);</span><br><span class="line">//传入地址信息，返回经纬度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gaodeMap(addressInfo.join(),2)</span><br><span class="line">city = []</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">function nodeclick(e)&#123;</span><br><span class="line">console.log(e)</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * </span><br><span class="line"> * @param &#123;Array&#125; data = [&#123;value: &quot;130000&quot;, text: &quot;河北省&quot;&#125;,&#123;value: &quot;130900&quot;, text: &quot;沧州市&quot;&#125;,&#123;value: &quot;130903&quot;, text: &quot;运河区&quot;&#125;] </span><br><span class="line"> * @param &#123;String&#125; 河北省/沧州市/运河区 </span><br><span class="line">   */</span><br><span class="line">   // data-pciker 回显处理函数</span><br><span class="line">   function dataPicker(data) &#123;</span><br><span class="line">   let result = &#x27;&#x27;;</span><br><span class="line">   data.forEach(item =&gt; (result += item.text + &#x27;/&#x27;));</span><br><span class="line">   result = result.substr(0, result.length - 1); // 截取掉最后一个斜杠</span><br><span class="line">   data.address = result</span><br><span class="line">   pickerdata.value = result</span><br><span class="line">   return result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">// 上传图片成功</span><br><span class="line">function uploadSuccess(res, name) &#123;</span><br><span class="line">data.storeObject[name] = res.data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 清除图片  仅前端</span><br><span class="line">function clear(name) &#123;</span><br><span class="line">data.storeObject[name] = &#x27;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function save() &#123;</span><br><span class="line">const phoneReg = /^1\d&#123;10&#125;$/;</span><br><span class="line">if (!data.storeObject.storeName) &#123;</span><br><span class="line">return uni.showToast(&#123;</span><br><span class="line">icon: &#x27;none&#x27;,</span><br><span class="line">title: &#x27;请输入门店名称&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">&#125; else if (data.storeObject.contactPhone &amp;&amp; !phoneReg.test(data.storeObject.contactPhone)) &#123;</span><br><span class="line">return uni.showToast(&#123;</span><br><span class="line">icon: &#x27;none&#x27;,</span><br><span class="line">title: &#x27;请输入合法手机号&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">&#125; else if (!data.storeObject.address) &#123;</span><br><span class="line">return uni.showToast(&#123;</span><br><span class="line">icon: &#x27;none&#x27;,</span><br><span class="line">title: &#x27;请输入门店地址&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">&#125; else if (!data.storeObject.areaCode) &#123;</span><br><span class="line">return uni.showToast(&#123;</span><br><span class="line">icon: &#x27;none&#x27;,</span><br><span class="line">title: &#x27;请选择门店省市区&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">if (data.sign == 0) &#123;</span><br><span class="line">console.log(data.storeObject.areaCode)</span><br><span class="line">$addMchStore(data.storeObject).then(() =&gt; &#123;</span><br><span class="line">uni.showToast(&#123;</span><br><span class="line">title: &#x27;新增成功&#x27;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uni.navigateBack(&#123;</span><br><span class="line">delta: 1</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">$updateMchStore(data.storeId, data.storeObject).then(() =&gt; &#123;</span><br><span class="line">console.log(data.storeObject)</span><br><span class="line">uni.showToast(&#123;</span><br><span class="line">title: &#x27;修改成功&#x27;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">uni.navigateBack(&#123;</span><br><span class="line">delta: 1</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;轮训查找地区代码&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/%E7%80%91%E5%B8%83%E6%B5%81/"/>
    <id>http://example.com/2021/10/28/%E7%80%91%E5%B8%83%E6%B5%81/</id>
    <published>2021-10-28T08:43:39.828Z</published>
    <updated>2021-10-11T08:09:09.841Z</updated>
    
    <content type="html"><![CDATA[<p>瀑布流案例</p><span id="more"></span><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;img_show&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;pubuBox&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;pubuItem&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item-masonry&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in comList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">image</span> <span class="attr">:src</span>=<span class="string">&quot;item.img&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;listtitle&quot;</span>&gt;</span> <span class="comment">&lt;!-- 这是没有高度的父盒子（下半部分） --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;listtitle1&quot;</span>&gt;</span>&#123;&#123; item.des &#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;listtitle2&quot;</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!-- &lt;text class=&quot;listtitle2son&quot;&gt;￥&lt;/text&gt; --&gt;</span></span><br><span class="line">                            &#123;&#123; item.name &#125;&#125;</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- &lt;view class=&quot;listtitle3&quot;&gt;</span></span><br><span class="line"><span class="comment">                            来自莫成尘的旗舰店</span></span><br><span class="line"><span class="comment">                        &lt;/view&gt; --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight scss"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.img_show</span>&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#f8f8f8</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"><span class="selector-class">.pubuBox</span> &#123;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">22</span>rpx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.pubuItem</span> &#123;</span><br><span class="line">        <span class="attribute">column-count</span>: <span class="number">2</span>;</span><br><span class="line">        <span class="attribute">column-gap</span>: <span class="number">20</span>rpx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.item-masonry</span> &#123;</span><br><span class="line">        <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">15</span>rpx;</span><br><span class="line">        <span class="attribute">overflow</span>: hidden;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">        <span class="attribute">break-inside</span>: avoid;</span><br><span class="line">        <span class="comment">/*避免在元素内部插入分页符*/</span></span><br><span class="line">        <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">20</span>rpx;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">28</span>rpx <span class="number">1</span>rpx rgba(<span class="number">78</span>, <span class="number">101</span>, <span class="number">153</span>, <span class="number">0.14</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.item-masonry</span> image &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.listtitle</span> &#123;</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">22</span>rpx;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">24</span>rpx;</span><br><span class="line">        <span class="attribute">padding-bottom</span>: <span class="number">22</span>rpx;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.listtitle1</span> &#123;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">39</span>rpx;</span><br><span class="line">            <span class="attribute">text-overflow</span>: -o-ellipsis-lastline;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">            <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">            <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">            -webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line">            line-clamp: <span class="number">2</span>;</span><br><span class="line">            -webkit-box-orient: vertical;</span><br><span class="line">            <span class="attribute">min-height</span>: <span class="number">39</span>rpx;</span><br><span class="line">            <span class="attribute">max-height</span>: <span class="number">78</span>rpx;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.listtitle2</span> &#123;</span><br><span class="line">            <span class="comment">//color: #ff0000;</span></span><br><span class="line"><span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">32</span>rpx;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">32</span>rpx;</span><br><span class="line">            <span class="attribute">font-weight</span>: bold;</span><br><span class="line">            <span class="attribute">padding-top</span>: <span class="number">22</span>rpx;</span><br><span class="line"></span><br><span class="line">            <span class="selector-class">.listtitle2son</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">32</span>rpx;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.listtitle3</span> &#123;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">28</span>rpx;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#909399</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">32</span>rpx;</span><br><span class="line">            <span class="attribute">padding-top</span>: <span class="number">22</span>rpx;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><figure class="highlight json"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">comList: [</span><br><span class="line">  &#123;</span><br><span class="line">img: <span class="string">&quot;http://files.especies.cn/dot/images/1076e0105dab4bf2993c28f83b2acc10/5076e0105dab4bf2993c28f83b2acc10/&#123;4F65A93E-D48B-470A-93C1-7C8B69AD6F31&#125;/0b84c4cb3445423aa411789a08e11b31.jpg&quot;</span>,</span><br><span class="line">des: &#x27;中等体型(<span class="number">29</span>厘米)的褐色及黑色水雉。具粗大的白色眉纹，头、颈及下体黑色而带绿色闪光；上体橄榄青铜色，尾栗色，前额栗色，眉白。幼鸟头顶褐色，胸部有些白色。&#x27;,</span><br><span class="line">name: &#x27;铜翅水雉&#x27;</span><br><span class="line">       &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">img: <span class="string">&quot;http://files.especies.cn/dot/images/1076e0105dab4bf2993c28f83b2acc10/5076e0105dab4bf2993c28f83b2acc10/&#123;4F783242-BD61-44BB-B971-8F1A107728F9&#125;/703eccfe0c2d4ba5994c840c3c005092.jpg&quot;</span>,</span><br><span class="line">des: &#x27;体大(<span class="number">60</span>厘米)的深褐色鸭。头色浅，顶及眼线色深，嘴黑而嘴端黄且于繁殖期黄色嘴端顶尖有一黑点为本种特征。喉及颊皮黄。亚种 zonorhyncha有过颊的深色纹，体羽更黑。&#x27;,</span><br><span class="line">name: &#x27;斑嘴鸭&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">&#123;</span><br><span class="line">img: <span class="string">&quot;http://files.especies.cn/dot/images/1076e0105dab4bf2993c28f83b2acc10/5076e0105dab4bf2993c28f83b2acc10/&#123;4CF5B17D-C03B-4E23-A8BF-3D3F56A0DA3C&#125;/120a081597e24de1bf70eea795310277.jpg&quot;</span>,</span><br><span class="line">des: <span class="string">&quot;中等体型(25厘米)， 翼长，叉形尾，喉皮黄色具黑色边缘(冬候鸟较模糊)。上体棕褐色具橄榄色光泽；两翼近黑；尾上覆羽白色；腹部灰；尾下白；叉形尾黑色&quot;</span>,</span><br><span class="line">name: &#x27;普通燕鸻&#x27;</span><br><span class="line"> &#125;,</span><br><span class="line"> &#123;</span><br><span class="line"> img: <span class="string">&quot;http://files.especies.cn/dot/images/1076e0105dab4bf2993c28f83b2acc10/5076e0105dab4bf2993c28f83b2acc10/&#123;5B3DB6FE-E82C-4A59-B311-19834348C4F4&#125;/8987e7756e664807af0cff43641f9f4a.jpg&quot;</span>,</span><br><span class="line"> des: <span class="string">&quot;灰色，似雨燕，尾长，两翼长且弯曲。特征为具竖起的凤头。上体深灰，三级飞羽具八道灰色横纹；具黑色眼罩；下体灰。雄鸟脸侧及耳羽有棕色块斑。亚成鸟多褐色，凤头极小，上多具白色及深褐色鳞纹&quot;</span>,</span><br><span class="line"> name: &#x27;凤头雨燕<span class="number">4</span>&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">  img: <span class="string">&quot;http://files.especies.cn/dot/images/1076e0105dab4bf2993c28f83b2acc10/5076e0105dab4bf2993c28f83b2acc10/&#123;5B3DB6FE-E82C-4A59-B311-19834348C4F4&#125;/8987e7756e664807af0cff43641f9f4a.jpg&quot;</span>,</span><br><span class="line">  des: <span class="string">&quot;灰色，似雨燕，尾长，两翼长且弯曲。特征为具竖起的凤头。上体深灰，三级飞羽具八道灰色横纹；具黑色眼罩；下体灰。雄鸟脸侧及耳羽有棕色块斑。亚成鸟多褐色，凤头极小，上多具白色及深褐色鳞纹&quot;</span>,</span><br><span class="line">  name: &#x27;凤头雨燕<span class="number">3</span>&#x27;</span><br><span class="line">   &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">   img: <span class="string">&quot;http://files.especies.cn/dot/images/1076e0105dab4bf2993c28f83b2acc10/5076e0105dab4bf2993c28f83b2acc10/&#123;5B3DB6FE-E82C-4A59-B311-19834348C4F4&#125;/8987e7756e664807af0cff43641f9f4a.jpg&quot;</span>,</span><br><span class="line">   des: <span class="string">&quot;灰色，似雨燕，尾长，两翼长且弯曲。特征为具竖起的凤头。上体深灰，三级飞羽具八道灰色横纹；具黑色眼罩；下体灰。雄鸟脸侧及耳羽有棕色块斑。亚成鸟多褐色，凤头极小，上多具白色及深褐色鳞纹&quot;</span>,</span><br><span class="line">   name: &#x27;凤头雨燕<span class="number">2</span>&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">&#123;</span><br><span class="line">img: <span class="string">&quot;http://files.especies.cn/dot/images/1076e0105dab4bf2993c28f83b2acc10/5076e0105dab4bf2993c28f83b2acc10/&#123;5B3DB6FE-E82C-4A59-B311-19834348C4F4&#125;/8987e7756e664807af0cff43641f9f4a.jpg&quot;</span>,</span><br><span class="line">des: <span class="string">&quot;灰色，似雨燕，尾长，两翼长且弯曲。特征为具竖起的凤头。上体深灰，三级飞羽具八道灰色横纹；具黑色眼罩；下体灰。雄鸟脸侧及耳羽有棕色块斑。亚成鸟多褐色，凤头极小，上多具白色及深褐色鳞纹&quot;</span>,</span><br><span class="line">name: &#x27;凤头雨燕<span class="number">1</span>&#x27;</span><br><span class="line"> &#125;,</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;瀑布流案例&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/%E9%A1%B6%E9%83%A8%E6%90%9C%E7%B4%A2%E6%A0%8F/"/>
    <id>http://example.com/2021/10/28/%E9%A1%B6%E9%83%A8%E6%90%9C%E7%B4%A2%E6%A0%8F/</id>
    <published>2021-10-28T08:43:39.828Z</published>
    <updated>2021-10-11T08:09:47.842Z</updated>
    
    <content type="html"><![CDATA[<p>顶部搜索栏效果</p><span id="more"></span><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;top_search&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;cuIcon-search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&#x27;请输入内容&#x27;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">确定</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight scss"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.top_search</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">position</span>: sticky;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*#ifdef APP-PLUS*/</span></span><br><span class="line"><span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*#endif*/</span></span><br><span class="line"><span class="comment">/*#ifdef H5*/</span></span><br><span class="line"><span class="attribute">top</span>: <span class="number">80</span>upx;</span><br><span class="line"><span class="comment">/*#endif*/</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"><span class="attribute">justify-content</span>: space-between;</span><br><span class="line"> <span class="attribute">align-items</span>: center;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">749</span>upx;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">116</span>upx;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line"><span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line"><span class="selector-class">.search</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: space-between;</span><br><span class="line"><span class="attribute">align-items</span>: center;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">610</span>upx;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">72</span>upx;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#C1C1C1</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"><span class="selector-class">.cuIcon-search</span>&#123;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">15</span>upx;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100</span>upx;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">72</span>upx;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">72</span>upx;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="comment">//background: #1CBBB4;</span></span><br><span class="line"><span class="attribute">color</span>: <span class="number">#2D72FB</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;顶部搜索栏效果&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/%E5%85%A8%E9%80%89%E4%BA%8B%E4%BB%B6/"/>
    <id>http://example.com/2021/10/28/%E5%85%A8%E9%80%89%E4%BA%8B%E4%BB%B6/</id>
    <published>2021-10-28T08:43:39.827Z</published>
    <updated>2021-10-11T08:08:37.219Z</updated>
    
    <content type="html"><![CDATA[        <h3 id="全选事件案例"   >          <a href="#全选事件案例" class="heading-link"><i class="fas fa-link"></i></a><a href="#全选事件案例" class="headerlink" title="全选事件案例"></a>全选事件案例</h3>      <span id="more"></span><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- more --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;headerbg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;totle&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>总共&#123;&#123;productnum&#125;&#125;件宝贝<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;body&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox-group</span>  @<span class="attr">change</span>=<span class="string">&quot;changeCheckbox&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;bodyitem&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in test&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">:class</span>=<span class="string">&quot;isShow? &#x27;open&#x27;:&#x27;close&#x27;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;checkbox&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> </span></span><br><span class="line"><span class="tag"><span class="attr">:value</span>=<span class="string">&quot;String(item.id)&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">:checked</span>=<span class="string">&quot;checkedArr.includes(String(item.id))&quot;</span> </span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;productimg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">:src</span>=<span class="string">&quot;item.img&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;productinfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;describe&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;item.describe&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;price_num&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>￥&#123;&#123;item.price&#125;&#125;+&#123;&#123;item.coin&#125;&#125;金币<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;bujin&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> @<span class="attr">click</span>=<span class="string">&quot;disnum(index)&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;item.prductnum&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> @<span class="attr">click</span>=<span class="string">&quot;plusnum(index)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>  <span class="attr">:class</span>=<span class="string">&quot;show2? &#x27;bottom&#x27;: &#x27;bottom_&#x27;&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;checkall&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox-group</span> <span class="attr">class</span>=<span class="string">&quot;checkbox&quot;</span>  @<span class="attr">change</span>=<span class="string">&quot;allChoose&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox</span>  </span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;round blue&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">&quot;all&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">:class</span>=<span class="string">&quot;&#123;&#x27;checked&#x27;:allChecked&#125;&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">:checked</span>=<span class="string">&quot;allChecked?true:false&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;select_text&quot;</span>&gt;</span>全选<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;bottom_right&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;allprice&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span><span class="tag">&lt;<span class="name">text</span>&gt;</span>合计：<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>￥&#123;&#123;allprice&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 25rpx;&quot;</span>&gt;</span>+&#123;&#123;allcoin&#125;&#125;金币<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;pricebutton&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">data:&#123;</span><br><span class="line">    <span class="attr">checkedArr</span>:[],</span><br><span class="line"><span class="attr">allChecked</span>:<span class="literal">false</span>,</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 多选复选框改变事件</span></span><br><span class="line">    <span class="function"><span class="title">changeCheckbox</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> s = <span class="number">0</span></span><br><span class="line">        <span class="keyword">let</span> arr = []</span><br><span class="line">        <span class="keyword">let</span> arrc = [] </span><br><span class="line">        <span class="comment">//this.allprice = 0</span></span><br><span class="line">        <span class="comment">//console.log(e)</span></span><br><span class="line">        <span class="built_in">this</span>.checkedArr = e.detail.value;</span><br><span class="line">        <span class="built_in">this</span>.checkedArr.length !==<span class="number">0</span>?<span class="built_in">this</span>.isMask = <span class="literal">true</span>:<span class="built_in">this</span>.isMask = <span class="literal">false</span></span><br><span class="line">        <span class="comment">// 如果选择的数组中有值，并且长度等于列表的长度，就是全选</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.checkedArr.length&gt;<span class="number">0</span> &amp;&amp; <span class="built_in">this</span>.checkedArr.length==<span class="built_in">this</span>.test.length)&#123;</span><br><span class="line">            <span class="built_in">this</span>.allChecked=<span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//this.isMask = true;</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.allChecked=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//productarr = e.detail.value</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.checkedArr);</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="function"><span class="title">allChoose</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> chooseItem = e.detail.value;</span><br><span class="line"><span class="comment">// 全选</span></span><br><span class="line">!<span class="built_in">this</span>.allChecked?<span class="built_in">this</span>.isMask = <span class="literal">true</span>:<span class="built_in">this</span>.isMask = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(chooseItem[<span class="number">0</span>]==<span class="string">&#x27;all&#x27;</span>)&#123;</span><br><span class="line"><span class="built_in">this</span>.allChecked=<span class="literal">true</span>;</span><br><span class="line"><span class="comment">//console.log(this.checkedArr);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> <span class="built_in">this</span>.test)&#123;</span><br><span class="line"><span class="keyword">let</span> itemVal=<span class="built_in">String</span>(item.id);</span><br><span class="line"><span class="comment">//console.log(itemVal)</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">this</span>.checkedArr.includes(itemVal))&#123;</span><br><span class="line"><span class="built_in">this</span>.checkedArr.push(itemVal);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//console.log(!this.checkedArr.includes(itemVal))</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// 取消全选</span></span><br><span class="line"><span class="built_in">this</span>.allChecked=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">this</span>.checkedArr=[];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;全选事件案例&quot;   &gt;
          &lt;a href=&quot;#全选事件案例&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#全选事件案例&quot; class=&quot;headerlink&quot; title=&quot;全选事件案例&quot;&gt;&lt;/a&gt;全选事件案例&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%89%87%E6%AE%B5/"/>
    <id>http://example.com/2021/10/28/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%89%87%E6%AE%B5/</id>
    <published>2021-10-28T08:43:39.827Z</published>
    <updated>2021-10-11T08:15:15.465Z</updated>
    
    <content type="html"><![CDATA[<p>跑马灯效果</p><span id="more"></span><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;image-wrap&quot;</span> <span class="attr">bindtouchstart</span>=<span class="string">&quot;handleStart&quot;</span> <span class="attr">bindtouchend</span>=<span class="string">&quot;handleEnd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;dice&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../img/shaizi.png&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;aspectFit&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">&quot;img&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;currentUrl&#125;&#125;&quot;</span>  <span class="attr">mode</span>=<span class="string">&quot;widthFix&quot;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;currentUrl.length&gt;0&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = getApp()</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">currentUrl</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">startTime</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">endTime</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 事件处理函数</span></span><br><span class="line">  handleStart (e) &#123;</span><br><span class="line">    <span class="keyword">let</span> count = <span class="built_in">this</span>.data.count</span><br><span class="line">    <span class="keyword">const</span> self = <span class="built_in">this</span></span><br><span class="line">    <span class="keyword">const</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        count++</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;第&#x27;</span> + count + <span class="string">&#x27;秒&#x27;</span>)</span><br><span class="line">        self.setData(&#123;</span><br><span class="line">          count</span><br><span class="line">        &#125;)</span><br><span class="line">        self.changeImg()</span><br><span class="line">            <span class="comment">// 需要改变页面上时分秒的值</span></span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">    <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">      <span class="attr">startTime</span>: e.timeStamp,</span><br><span class="line">      timer</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  handleEnd (e) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.data.timer) &#123;</span><br><span class="line">      <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.data.timer)</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">changeImg</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.data.count) &#123;</span><br><span class="line">      <span class="keyword">const</span> flag = <span class="built_in">this</span>.data.count % <span class="number">10</span> </span><br><span class="line">      <span class="keyword">if</span> (flag === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.setImage(<span class="string">&#x27;part1&#x27;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag &gt;= <span class="number">2</span> &amp;&amp; flag &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.setImage(<span class="string">&#x27;part2&#x27;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag === <span class="number">5</span> || flag === <span class="number">6</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.setImage(<span class="string">&#x27;part3&#x27;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag &gt;= <span class="number">7</span> &amp;&amp; flag &lt;= <span class="number">9</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.setImage(<span class="string">&#x27;part4&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  setImage (name) &#123;</span><br><span class="line">    <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">      <span class="attr">currentUrl</span>: <span class="string">&#x27;../img/&#x27;</span> + name + <span class="string">&#x27;.png&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">onLoad</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.setImage(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.image-wrap &#123;</span><br><span class="line">    <span class="attr">position</span>: relative;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    height:800rpx;</span><br><span class="line">&#125;</span><br><span class="line">.dice&#123;</span><br><span class="line">    <span class="attr">position</span>: absolute;</span><br><span class="line">    z-index: <span class="number">99</span>;</span><br><span class="line">    width: 350rpx;</span><br><span class="line">    height: 350rpx;</span><br><span class="line">    left: 160rpx;</span><br><span class="line">    top: 183rpx;</span><br><span class="line">&#125;</span><br><span class="line">.img&#123;</span><br><span class="line">    <span class="attr">position</span>: absolute;</span><br><span class="line">    width: 600rpx;</span><br><span class="line">    height: 600rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;跑马灯效果&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/"/>
    <id>http://example.com/2021/10/28/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</id>
    <published>2021-10-28T08:43:39.826Z</published>
    <updated>2021-10-11T08:07:58.568Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="上传图片案例"   >          <a href="#上传图片案例" class="heading-link"><i class="fas fa-link"></i></a><a href="#上传图片案例" class="headerlink" title="上传图片案例"></a>上传图片案例</h2>      <span id="more"></span><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;top_img&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;preImg&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in imglist&quot;</span> <span class="attr">:key</span>=<span class="string">&#x27;index&#x27;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">:src</span>=<span class="string">&quot;item&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;lookImg(index)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;image-remove&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;removeImage(index)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;chooseImg&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;chooseImg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u-icon</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">name</span>=<span class="string">&quot;plus&quot;</span> <span class="attr">size</span>=<span class="string">&quot;50&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">u-icon</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></div></figure><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">lookImg</span>(<span class="params">index</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> urls=  <span class="built_in">this</span>.imglist</span><br><span class="line"><span class="keyword">const</span> current = index</span><br><span class="line">uni.previewImage(&#123;</span><br><span class="line"><span class="attr">urls</span>:urls,</span><br><span class="line"><span class="attr">current</span>:current</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">removeImage</span>(<span class="params">index</span>)</span>&#123;</span><br><span class="line"><span class="comment">//console.log(&#x27;123&#x27;)</span></span><br><span class="line"><span class="built_in">this</span>.imglist.splice(index,<span class="number">1</span>)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">chooseImg</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> imglist = []</span><br><span class="line">uni.chooseImage(&#123;</span><br><span class="line"><span class="attr">count</span>:<span class="number">12</span>,</span><br><span class="line"><span class="attr">sourceType</span>:[<span class="string">&#x27;album&#x27;</span>,<span class="string">&#x27;camera&#x27;</span>],</span><br><span class="line"><span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//this.tempImg.push(res.tempFilePaths)</span></span><br><span class="line"><span class="comment">// imglist.push(res.tempFilePaths)</span></span><br><span class="line"><span class="comment">// console.log(imglist,&#x27;1111111111111&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.tempImg = res.tempFilePaths</span><br><span class="line"><span class="comment">//console.log(this.tempImg)</span></span><br><span class="line"><span class="comment">//循环push</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> s <span class="keyword">of</span> <span class="built_in">this</span>.tempImg) &#123;</span><br><span class="line"><span class="built_in">this</span>.imglist.push(s)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//console.log(this.imglist)</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></div></figure><figure class="highlight scss"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.top_img</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">10</span>rpx;</span><br><span class="line"></span><br><span class="line"><span class="comment">//background: #18B566;</span></span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: flex-start;</span><br><span class="line"><span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.preImg</span>&#123;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">150</span>rpx;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">150</span>rpx;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">20</span>rpx;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">20</span>rpx;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">20</span>rpx;</span><br><span class="line">image&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.image-remove</span>&#123;</span><br><span class="line"> <span class="attribute">background-color</span>: <span class="number">#000000</span>;</span><br><span class="line">  <span class="comment">//font-color: #181716;</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: rotate(<span class="number">45deg</span>); </span><br><span class="line">  <span class="attribute">cursor</span>:pointer;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">  <span class="attribute">top</span>:-<span class="number">7</span>rpx;</span><br><span class="line">  <span class="attribute">right</span>:-<span class="number">5</span>rpx;   <span class="comment">//top、right: 距离上侧2个像素，距离右侧两个像素，也就是右上角</span></span><br><span class="line">  <span class="attribute">display</span>: block; <span class="comment">//块元素:设置宽和高，inline元素设置宽高无效</span></span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.chooseImg</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">150</span>rpx;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">150</span>rpx;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#b9b9ba</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">20</span>rpx;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">20</span>rpx;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">20</span>rpx;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: center;</span><br><span class="line"><span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;上传图片案例&quot;   &gt;
          &lt;a href=&quot;#上传图片案例&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#上传图片案例&quot; class=&quot;headerlink&quot; title=&quot;上传图片案例&quot;&gt;&lt;/a&gt;上传图片案例&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/uni-app/"/>
    <id>http://example.com/2021/10/28/uni-app/</id>
    <published>2021-10-28T08:43:39.825Z</published>
    <updated>2021-10-11T08:09:55.835Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="uni-app"   >          <a href="#uni-app" class="heading-link"><i class="fas fa-link"></i></a><a href="#uni-app" class="headerlink" title="uni-app"></a>uni-app</h1>      <p>基于vue的跨平台框架</p><span id="more"></span>        <h2 id="目录结构"   >          <a href="#目录结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2>      <p>pages：程序页面</p><p>static：静态资源</p><p>unpacked：打包后的内容</p><p>App.vue：页面入口文件</p><p>main.js：项目入口文件</p><p>manifest.json：配置文件</p><p>pages.jaon：页面配置文件</p><p>uni.scss：通用样式</p>        <h2 id="开发规范"   >          <a href="#开发规范" class="heading-link"><i class="fas fa-link"></i></a><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h2>      <p>页面文件遵循单页面规范</p><p>组件标签靠近小程序规范</p><p>接口能力靠近小小程序规范</p><p>数据绑定及事件处理同Vue规范</p><p>为兼容多端运行，建议使用flex布局</p>        <h2 id="全局配置和页面配置"   >          <a href="#全局配置和页面配置" class="heading-link"><i class="fas fa-link"></i></a><a href="#全局配置和页面配置" class="headerlink" title="全局配置和页面配置"></a>全局配置和页面配置</h2>      <p><code> globalstyle</code>全局样式：</p><p>navigationBarBackgroundColor：导航栏背景颜色</p><p>navigationBarTextStyle：导航栏字体颜色</p><p>navigationBarTitleText：页面标题内容</p><p>backgroundColor：窗口背景色</p><p>backgroundTextStyle：下拉加载颜色</p><p>onReachButtomDistance：触底事件触发时距底部距离</p>        <h2 id="页面配置文件"   >          <a href="#页面配置文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#页面配置文件" class="headerlink" title="页面配置文件"></a>页面配置文件</h2>      <p><code>path</code> 页面地址</p><p><code> style</code> 页面样式</p>        <h2 id="tabBar"   >          <a href="#tabBar" class="heading-link"><i class="fas fa-link"></i></a><a href="#tabBar" class="headerlink" title="tabBar"></a>tabBar</h2>      <p>通过tabBar配置项指定tab栏的表现，以及tab切换时显示的对应页。</p><p>tabBar中的list是一个数组，只能配置最少两个，最多5个tab，tab按数组的顺序排列</p><p>属性：</p><p>color：tab上的文字默认颜色</p><p>selectcolor：tab上的文字选中时的颜色</p><p>backgroundColor：tab的背景色</p>        <h2 id="condition启动模式"   >          <a href="#condition启动模式" class="heading-link"><i class="fas fa-link"></i></a><a href="#condition启动模式" class="headerlink" title="condition启动模式"></a>condition启动模式</h2>      <p>用于模拟直达页面的场景，如：小程序转发后用户点击打开的页面</p>        <h2 id="uniapp组件"   >          <a href="#uniapp组件" class="heading-link"><i class="fas fa-link"></i></a><a href="#uniapp组件" class="headerlink" title="uniapp组件"></a>uniapp组件</h2>      <p><span class="exturl"><a class="exturl__link"   href="https://uniapp.dcloud.io/component/vue-component" >https://uniapp.dcloud.io/component/vue-component</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="button组件属性"   >          <a href="#button组件属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#button组件属性" class="headerlink" title="button组件属性"></a>button组件属性</h3>      <p>size：按钮大小</p><p>type：按钮样式类型</p><p>plain：按钮是否镂空</p><p>disable：按钮是否可用</p><p>loading：加载中</p>        <h3 id="image组件属性"   >          <a href="#image组件属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#image组件属性" class="headerlink" title="image组件属性"></a>image组件属性</h3>      <p>src：图片路径</p><p>mode：缩放模式</p><p>lazy-load：懒加载</p>        <h2 id="uniapp样式"   >          <a href="#uniapp样式" class="heading-link"><i class="fas fa-link"></i></a><a href="#uniapp样式" class="headerlink" title="uniapp样式"></a>uniapp样式</h2>      <p>rpx：响应式px，以750宽为基准。</p><p>@import导入外联样式表</p><p>局部样式覆盖全局样式</p><p>字体图标</p>        <h2 id="uniapp数据绑定"   >          <a href="#uniapp数据绑定" class="heading-link"><i class="fas fa-link"></i></a><a href="#uniapp数据绑定" class="headerlink" title="uniapp数据绑定"></a>uniapp数据绑定</h2>      <p>在data中定义，和vue一样</p><p>v-bind 动态绑定，v-for循环</p>        <h2 id="uniapp中的事件"   >          <a href="#uniapp中的事件" class="heading-link"><i class="fas fa-link"></i></a><a href="#uniapp中的事件" class="headerlink" title="uniapp中的事件"></a>uniapp中的事件</h2>      <p>v-on事件注册   =   @</p>        <h2 id="生命周期"   >          <a href="#生命周期" class="heading-link"><i class="fas fa-link"></i></a><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2>      <p>生命周期函数：</p><p>onLaunch：uniapp初始化完成</p><p>onShow：从后台进入前台显示</p><p>onHide：从前台进入后台</p><p>onError：报错时触发</p><p>页面的生命周期</p><p>onLoad：监听页面加载</p><p>onShow：监听页面显示</p><p>onReady：监听页面初次渲染完成</p><p>onHide：监听页面隐藏</p><p>onUnload：页面卸载 </p><p>onPullDownRefresh：监听用户下拉刷新</p><p>下拉刷新两种实现方法：在js中定义onPullDownRefresh处理函数，监听该页面的用户的下拉刷新在pages里设置enablePullDownRefresh为true;</p><p>使用uni.startPullDownRefresh()</p><p>停止下拉刷新：uni.stopPullDownRefresh()</p><p>onReachButtom:页面触底加载</p>        <h2 id="网络请求"   >          <a href="#网络请求" class="heading-link"><i class="fas fa-link"></i></a><a href="#网络请求" class="headerlink" title="网络请求"></a>网络请求</h2>      <figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">uni.request(&#123;</span><br><span class="line"><span class="attr">url</span>:<span class="string">&quot;http://localhost:8082/api/getlunbo&quot;</span>,</span><br><span class="line"><span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.imgUrl = res.data.message <span class="comment">//使用箭头函数可以避免找不到this的问题，否则</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="nui缓存"   >          <a href="#nui缓存" class="heading-link"><i class="fas fa-link"></i></a><a href="#nui缓存" class="headerlink" title="nui缓存"></a>nui缓存</h2>      <p><code>uni.setSorage </code> 将数据储存在本地缓存中指定的key中，会覆盖掉原来key的内容，这是一个异步接口</p><p>key：data</p><p><code>uni.getStorage </code> 获取本地缓存</p><p><code>uni.removeStorage </code> 移除本地数据</p>        <h2 id="图片的上传和预览"   >          <a href="#图片的上传和预览" class="heading-link"><i class="fas fa-link"></i></a><a href="#图片的上传和预览" class="headerlink" title="图片的上传和预览"></a>图片的上传和预览</h2>      <p><code> uni.chooseImage</code> </p><p>count:数量</p><p>sizeType：原图还是压缩</p><p>sourceType：来源</p><p>success：成功的回调函数</p><p>fail：失败的回调函数</p><p>complete：接口调用结束的回调函数</p>        <h2 id="条件编译"   >          <a href="#条件编译" class="heading-link"><i class="fas fa-link"></i></a><a href="#条件编译" class="headerlink" title="条件编译"></a>条件编译</h2>      <p>条件编译是用特殊的注释作为标记，在编译时根据这些特殊的注释，将注释里面的代码编译到不同平台。</p><p><strong>写法：</strong>以 #ifdef 或 #ifndef 加 <strong>%PLATFORM%</strong> 开头，以 #endif 结尾。</p>        <h2 id="导航跳转和传参"   >          <a href="#导航跳转和传参" class="heading-link"><i class="fas fa-link"></i></a><a href="#导航跳转和传参" class="headerlink" title="导航跳转和传参"></a>导航跳转和传参</h2>      <p>声明式导航以及传参</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">声明式导航以及传参</span><br><span class="line">&lt;navigator url=&#x27;/页面注册路径?url参数键值对&#x27; open-type=&quot;跳转方式&quot;&gt;内容&lt;/navigator&gt;</span><br><span class="line"></span><br><span class="line"> open-type</span><br><span class="line">navigate 栈跳转,不写默认为该方式</span><br><span class="line">redirect  删除当前页面，跳转另一页面</span><br><span class="line">switchTab  跳转到tabBar设置的页面,必须使用该方式</span><br><span class="line">navigateBack  返回上一个页面</span><br><span class="line">exit 退出小程序，target=&quot;miniProgram&quot;时生效 </span><br><span class="line"></span><br><span class="line">编程式导航以及传参</span><br><span class="line">在回调中</span><br><span class="line">uni.navigateTo(&#123;url:&quot;/页面注册路径?url参数键值对&quot;&#125;,success:成功回调)</span><br><span class="line">uni.redirectTo 删除当前页面，跳转另一页面</span><br><span class="line">uni.switchTab  跳转到tabBar设置的页面,必须使用该方式</span><br><span class="line">uni.navigateBack 返回上一个页面</span><br><span class="line"></span><br><span class="line">接收参数</span><br><span class="line">在页面中,使用页面生命周期函数</span><br><span class="line">onLoad(option)</span><br><span class="line">&#123;</span><br><span class="line">option.键名,获取对应参数</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h2 id="组件的创建"   >          <a href="#组件的创建" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件的创建" class="headerlink" title="组件的创建"></a>组件的创建</h2>      <p>创建一个vue文件，其他组件可以将该组件通过import方式导入，再通过components注册</p><p>组件的生命周期函数和vue一样</p>        <h2 id="组件通讯"   >          <a href="#组件通讯" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件通讯" class="headerlink" title="组件通讯"></a>组件通讯</h2>      <p>子组件props接受数据，可以是数组或对象，用于接收来自父组件的数据</p><p>子组件向父组件传值，<code> $emit</code> </p><p>子组件 <code>this.$emit(&#39;myEvent&#39;,this.num)</code></p><p>父组件<code>@myEvent=&#39;getNum&#39;</code></p>        <h2 id="兄弟组件传值"   >          <a href="#兄弟组件传值" class="heading-link"><i class="fas fa-link"></i></a><a href="#兄弟组件传值" class="headerlink" title="兄弟组件传值"></a>兄弟组件传值</h2>      <p>A组件内容</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">    <span class="function"><span class="title">addNum</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        uni.$emit(<span class="string">&#x27;updateNum&#x27;</span>,<span class="number">100000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>B组件内容</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">created</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="built_in">this</span></span><br><span class="line">    uni.$on(<span class="string">&#x27;updateNum&#x27;</span>,<span class="function"><span class="params">num</span>=&gt;</span>&#123;</span><br><span class="line">        that.num += num</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;uni-app&quot;   &gt;
          &lt;a href=&quot;#uni-app&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#uni-app&quot; class=&quot;headerlink&quot; title=&quot;uni-app&quot;&gt;&lt;/a&gt;uni-app&lt;/h1&gt;
      &lt;p&gt;基于vue的跨平台框架&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/scss/"/>
    <id>http://example.com/2021/10/28/scss/</id>
    <published>2021-10-28T08:43:39.823Z</published>
    <updated>2021-07-22T09:59:37.033Z</updated>
    
    <content type="html"><![CDATA[<p>属性的嵌套：</p><span id="more"></span><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>:Arial;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span> <span class="attribute">normal</span>;</span><br><span class="line">&#125;</span><br><span class="line">等同于</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">font</span>:&#123;</span><br><span class="line">        family:Arial;</span><br><span class="line">        size:<span class="number">15px</span>;</span><br><span class="line">        weight:normal;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p><code> mixin</code>:类似于函数，</p><figure class="highlight scss"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> alert &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    backgroundclor:black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.alert-waring</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> alert</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>在<code>mixin</code>里使用参数</p><figure class="highlight scss"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@minin</span> alert(<span class="variable">$text-color</span>,<span class="variable">$background</span>)&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">$text-color</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="variable">$background</span></span><br><span class="line">        a&#123;</span><br><span class="line">            color:darken(<span class="variable">$text-color</span>,<span class="number">10%</span>)</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line">//调用</span><br><span class="line">.alert-warning&#123;</span><br><span class="line">    @include alet(<span class="number">#eee</span>ee,<span class="number">#ffffff</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p><code>@extend</code>继承其他选择器的所有样式</p><figure class="highlight scss"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.alert</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.alert-info</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span> .alert;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p><code>partials</code> 下划线开头的文件，在其他<code>scss</code>里可以引用</p><p><code>percentage</code>转化为百分比</p><p>字符串函数</p><p><code>$greting</code></p><p><code>$to-upper-case</code></p><p><code>$str-length</code></p><p><code>$str-index</code></p><p><code>$str-insert</code></p><p>条件语句</p><p><code>@if</code> </p><p><code>@for</code>        <code>@for $var from &lt;开始值&gt; through &lt;结束值&gt;&#123;&#125;</code> </p><p><code>@each</code></p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$icons:success error warning;</span><br><span class="line"></span><br><span class="line">@each $icon in $icons &#123;</span><br><span class="line">.icon-#&#123;$icon&#125;&#123;</span><br><span class="line">background-image:url(../images/icons/#&#123;$icon&#125;.png)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p><code>@function</code></p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@function color($key)&#123;</span><br><span class="line">@return map-get($color,$key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;属性的嵌套：&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/ts%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2021/10/28/ts%E7%AC%94%E8%AE%B0/</id>
    <published>2021-10-28T08:43:39.823Z</published>
    <updated>2021-07-08T08:22:51.190Z</updated>
    
    <content type="html"><![CDATA[<p>TypeScript是JavaScript超集</p><span id="more"></span>        <h1 id="铺垫"   >          <a href="#铺垫" class="heading-link"><i class="fas fa-link"></i></a><a href="#铺垫" class="headerlink" title="铺垫"></a>铺垫</h1>      <p>js：运行在客户端中的编程语言，提供一些网页特效，也可以运行在nodejs中</p><p>typescript概述：typescript是JavaScript的超集，兼容JavaScript，typescript=type+javascrip</p><p>ts对比js的优势：js类型系统存在先天不足</p><p>ts提供了一种类型化思维方式，使得开发变得严谨，提前发现错误；类型系统提高了代码的可读性，让重构和维护更加容易</p>        <h1 id="运行TS代码"   >          <a href="#运行TS代码" class="heading-link"><i class="fas fa-link"></i></a><a href="#运行TS代码" class="headerlink" title="运行TS代码"></a>运行TS代码</h1>      <p>使用ts-node包，简化运行步骤</p><p>安装code runner插件，安装ts-node包，可以直接使用coderunner运行代码</p><p>注释：<code> //</code> <code> /*   */</code> </p>        <h1 id="使用ts"   >          <a href="#使用ts" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用ts" class="headerlink" title="使用ts"></a>使用ts</h1>      <p>变量：1、声明变量并指定类型2、给变量赋值</p><p><code> let age:number = 15</code> </p><p>类型注解：<code>:number</code>  约定变量的类型</p><p>变量的命名规则：数字、字母、下划线、美元符号、且不能以数字开头</p><p>数据类型：<code>number string array object boolean undefined null</code> </p><p>运算符：<code>+ - * / =  ++  -- &lt; &gt; &amp;&amp; ||  !</code>   </p><p>if语句 <code>if()&#123;&#125; </code></p><p>else语句：<code>else&#123;&#125;</code></p><p>for语句:<code>for(let i =1;i&lt;10;i++)&#123;&#125; </code></p><p>数组：<code>let nums:number[] = [1,2,3]</code></p><p>对象：一组相关属性和方法的集合，并且是无序的。对象在使用之前可以提前进行设计—对象的类型注解</p><p>接口：为对象的类型注解命名，并为代码建立契约来约束对象结构</p><figure class="highlight ts"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建接口</span></span><br><span class="line"><span class="keyword">interface</span> IUuser&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="built_in">string</span>;</span><br><span class="line">    age:<span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用接口</span></span><br><span class="line"><span class="keyword">let</span> p1:IUser=&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;jack&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>对象的取值：<code>对象名.key</code> </p><p>内置对象：ts自带的一些基础对象，提供ts开发时所需的基础或者必要能力</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;TypeScript是JavaScript超集&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/README/"/>
    <id>http://example.com/2021/10/28/README/</id>
    <published>2021-10-28T08:43:39.821Z</published>
    <updated>2021-06-23T00:32:16.451Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="mdRepository"   >          <a href="#mdRepository" class="heading-link"><i class="fas fa-link"></i></a><a href="#mdRepository" class="headerlink" title="mdRepository"></a>mdRepository</h1>      <p>临时的md文件仓库</p>]]></content>
    
    
      
      
    <summary type="html">
        &lt;h1 id=&quot;mdRepository&quot;   &gt;
          &lt;a href=&quot;#mdRepository&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#mdReposit</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/NodeJs/"/>
    <id>http://example.com/2021/10/28/NodeJs/</id>
    <published>2021-10-28T08:43:39.820Z</published>
    <updated>2021-07-23T03:09:30.509Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="NodeJs"   >          <a href="#NodeJs" class="heading-link"><i class="fas fa-link"></i></a><a href="#NodeJs" class="headerlink" title="NodeJs"></a>NodeJs</h1>      <span id="more"></span><p>擅长高并发，通过非阻塞I/O、事件驱动，让Nodejs程序宏观上也是并行的</p><p><img src="https://i.loli.net/2021/07/20/MxmTO7XqlHZhNnd.png"></p>        <h2 id="hello-nodejs"   >          <a href="#hello-nodejs" class="heading-link"><i class="fas fa-link"></i></a><a href="#hello-nodejs" class="headerlink" title="hello nodejs"></a>hello nodejs</h2>      <figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入http模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建http服务</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    request：获取请求信息</span></span><br><span class="line"><span class="comment">    response：给浏览器响应信息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//设置响应头</span></span><br><span class="line">  response.writeHead(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class="line">  <span class="comment">//页面上输出</span></span><br><span class="line">  response.end(<span class="string">&#x27;Hello World&#x27;</span>);</span><br><span class="line">  <span class="comment">//端口</span></span><br><span class="line">&#125;).listen(<span class="number">8081</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Server running at http://127.0.0.1:8081/&#x27;</span>);</span><br><span class="line"><span class="comment">////////////////////////////////</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"></span><br><span class="line">http.createServer(<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.url);</span><br><span class="line"></span><br><span class="line">    res.writeHead(<span class="number">200</span>,&#123;<span class="string">&quot;Content-type&quot;</span>:<span class="string">&quot;text/html;charset=&#x27;utf-8&#x27;&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line">    res.write(<span class="string">&#x27;this is node &#x27;</span>);</span><br><span class="line">    res.end();</span><br><span class="line">&#125;).listen(<span class="number">8081</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;http://127.0.0.1:8081/&quot;</span>);</span><br></pre></td></tr></table></div></figure><p>URL.parse()解析url</p><blockquote><p>url模块下的parse已弃用，推荐使用url类</p></blockquote><p><code> let &#123;name,age&#125; = URL.parse(req.url,true).query;</code></p>        <h2 id="supervisor工具"   >          <a href="#supervisor工具" class="heading-link"><i class="fas fa-link"></i></a><a href="#supervisor工具" class="headerlink" title="supervisor工具"></a>supervisor工具</h2>      <p>监听代码修改，热更新</p><p><code>supervisor app.js</code></p>        <h2 id="CommonJs"   >          <a href="#CommonJs" class="heading-link"><i class="fas fa-link"></i></a><a href="#CommonJs" class="headerlink" title="CommonJs"></a>CommonJs</h2>      <p>为了弥补js没有标准库的缺陷，实现类似python，Ruby和java的标准库。不仅可以利用js开发客户端应用，还可以编写以下应用</p><ul><li>服务端js应用程序，</li><li>命令行工具</li><li>桌面图形界面应用程序</li></ul>        <h3 id="自定义模块"   >          <a href="#自定义模块" class="heading-link"><i class="fas fa-link"></i></a><a href="#自定义模块" class="headerlink" title="自定义模块"></a>自定义模块</h3>      <p>通过exports暴露属性或者方法</p>        <h2 id="第三方模块管理"   >          <a href="#第三方模块管理" class="heading-link"><i class="fas fa-link"></i></a><a href="#第三方模块管理" class="headerlink" title="第三方模块管理"></a>第三方模块管理</h2>      <p>包：</p><ul><li>package.json</li><li>bin</li><li>lib</li><li>doc</li></ul><p>npm:下载包用的</p><p>cnpm：国内下载包用的</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install packageName --save //安装到项目目录下，并在package.json文件的dependencies中写入依赖，简写为-S`</span><br><span class="line">`npm install packageName --save-dev //安装到项目目录下，并在package.json文件的devDependencies中写入依赖，简写为-D</span><br></pre></td></tr></table></div></figure>        <h2 id="fs模块"   >          <a href="#fs模块" class="heading-link"><i class="fas fa-link"></i></a><a href="#fs模块" class="headerlink" title="fs模块"></a>fs模块</h2>      <p>fs.stat()</p><p><code>fs.stat(path[options],callback)</code></p><p>path:string|buffer|URL</p><p>options:Object</p><p>callback:Function</p><ul><li>err</li><li>stats</li></ul><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs.stat(<span class="string">&#x27;E:/笔记/mdRepository&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(data.isFile());</span><br><span class="line">    <span class="built_in">console</span>.log(data.isDirectory());</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure><p>fs.mkdir()</p><ul><li>path:string|buffer|url</li><li>options:Object|integer<ul><li>recursive:boolena默认false</li><li>mode:string|integer</li></ul></li><li>callback:Function<ul><li>err</li></ul></li></ul><p>异步的创建目录，回调给出一个可能的异常和创建第一个目录路径。当recursive为true时，如果没有创建目录则path仍为undefined</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fs.mkdir(<span class="string">&#x27;./css&#x27;</span>,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;创建成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure><p>fs.writeFile()</p><ul><li>file:string|buffer|url|integer</li><li>data:string|buffer|typeArray|dataviwe|object</li><li>options:Object|string<ul><li>encoding:string|null</li><li>mode:integer</li><li>flag:string</li><li>signal</li></ul></li><li>callback:function<ul><li>err</li></ul></li></ul><p>当file是文件名时，将数据异步地写入文件，如果文件已存在则替换该文件。data可以是字符串或者缓冲区。</p><p>fs.appendFile()</p><ul><li>path:string|buffer|url|number</li><li>data:string|object</li><li>options:object|string<ul><li>encoding:string|null</li><li>mode:integer</li><li>flag：string</li></ul></li><li>callback：Function<ul><li>err</li></ul></li></ul><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fs.appendFile(<span class="string">&#x27;./css/index.css&#x27;</span>,<span class="string">&#x27;.a&#123;width:100px;height:200px;&#125;&#x27;</span>,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure><p>异步地将数据追加到文件，如果该文件不存在，则创建该文件。data可以是字符串或者buffer</p><p>fs.readFile()</p><ul><li>path:string|buffer|url|integer</li><li>options:object|string<ul><li>encoding:string|null</li><li>flag:string</li><li>signal:abortsignal</li></ul></li><li>callback:Function<ul><li>err</li><li>data</li></ul></li></ul><p>异步地读取文件的全部内容</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(<span class="string">&#x27;./css/index.css&#x27;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(data.toString());</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure><p>fs.readdir()</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fs.readdir(<span class="string">&#x27;./node_modules&#x27;</span>,<span class="function">(<span class="params">err,data</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure><p>fs.rename()</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fs.rename(<span class="string">&#x27;./css/index.css&#x27;</span>,<span class="string">&#x27;./css/aaa.css&#x27;</span>,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure><p>fs.rmdir()删除目录</p><p>fs.unlink()删除文件</p>        <h3 id="async-await"   >          <a href="#async-await" class="heading-link"><i class="fas fa-link"></i></a><a href="#async-await" class="headerlink" title="async/await"></a>async/await</h3>      <p>简化异步编程，让异步看起来像同步</p><p><code>async function foo()&#123; await 1&#125;</code></p><p>等价于</p><p><code>function foo()&#123;return Promise.resolve(1).then(()=&gt;undefined)&#125;</code></p><p>async/await的优势在于处理then链。</p><p>async的优点</p><ul><li>内置执行器</li><li>更好的语义</li><li>更广的适用性</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;NodeJs&quot;   &gt;
          &lt;a href=&quot;#NodeJs&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#NodeJs&quot; class=&quot;headerlink&quot; title=&quot;NodeJs&quot;&gt;&lt;/a&gt;NodeJs&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/js%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2021/10/28/js%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</id>
    <published>2021-10-28T08:43:39.820Z</published>
    <updated>2021-08-18T14:27:02.510Z</updated>
    
    <content type="html"><![CDATA[<p>js阅读笔记，能看多少是多少</p><span id="more"></span>        <h1 id="第二章-HTML中的JavaScript"   >          <a href="#第二章-HTML中的JavaScript" class="heading-link"><i class="fas fa-link"></i></a><a href="#第二章-HTML中的JavaScript" class="headerlink" title="第二章 HTML中的JavaScript"></a>第二章 HTML中的JavaScript</h1>              <h2 id="标签位置："   >          <a href="#标签位置：" class="heading-link"><i class="fas fa-link"></i></a><a href="#标签位置：" class="headerlink" title="标签位置："></a>标签位置：</h2>      <p>在<code>&lt;head&gt;</code>标签内，优点：把引入的文件都集中在一起。弊端：在加载慢时网页空白，导致观感差。改进：放在页面元素后边</p>        <h2 id="延迟执行脚本："   >          <a href="#延迟执行脚本：" class="heading-link"><i class="fas fa-link"></i></a><a href="#延迟执行脚本：" class="headerlink" title="延迟执行脚本："></a>延迟执行脚本：</h2>      <p><code>defer</code> 属性，优点：在页面解析后才运行脚本，避免空白。缺点：在实际中延迟脚本未必按照顺序执行，也未必在<code>DOMContentLoaded</code> 事件之前执行，最好只包含一个这样的脚本。</p>        <h2 id="异步执行脚本："   >          <a href="#异步执行脚本：" class="heading-link"><i class="fas fa-link"></i></a><a href="#异步执行脚本：" class="headerlink" title="异步执行脚本："></a>异步执行脚本：</h2>      <p><code>async</code> 属性与<code>defer</code> 类似，不同的是<code>async</code>脚本并不能保证执行难顺序，因此几个脚本之间最好不要有依赖关系，在加载期间也不要操作DOM，</p>        <h2 id="动态加载脚本："   >          <a href="#动态加载脚本：" class="heading-link"><i class="fas fa-link"></i></a><a href="#动态加载脚本：" class="headerlink" title="动态加载脚本："></a>动态加载脚本：</h2>      <p>向<code>dom</code>中动态添加<code>script</code> 元素</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> script = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">script.src = <span class="string">&#x27;xxxx.js&#x27;</span>;</span><br><span class="line"><span class="built_in">document</span>.head.appendChild(script);</span><br></pre></td></tr></table></div></figure><p>默认情况下这种方式创建的是异步方式加载的，弊端：不是所有浏览器都支持<code>async</code>属性，如果要统一加载行为，可以明确设置为同步加载</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> script = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">script.src = <span class="string">&#x27;xxxx.js&#x27;</span>;</span><br><span class="line">script.async = <span class="literal">false</span>;</span><br><span class="line">docunment.head.appendChild(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p>弊端:这种方式获取的资源对浏览器预加载器来说完全不可见，严重影响性能。要想让预加载器知道动态文件的存在，可以在文档头部显式的声明</p><p><code> &lt;link rel = &quot;preload&quot; href=&quot;xxxx.js&quot;&gt;</code></p>        <h2 id="行内代码与外部文件"   >          <a href="#行内代码与外部文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#行内代码与外部文件" class="headerlink" title="行内代码与外部文件"></a>行内代码与外部文件</h2>      <p>使用外部文件的优点：可维护性高，提高加载速度，适应未来。</p>        <h2 id="lt-noscript-gt-标签"   >          <a href="#lt-noscript-gt-标签" class="heading-link"><i class="fas fa-link"></i></a><a href="#lt-noscript-gt-标签" class="headerlink" title="&lt;noscript&gt;标签"></a><code>&lt;noscript&gt;</code>标签</h2>      <p><code>&lt;noscript&gt;</code>元素可以出现在任何<code>body</code> 元素中，当浏览器不支持脚本或者浏览器对脚本的支持被关闭时<code>noscript</code>中的元素就会被渲染。否则不会渲染。</p>        <h1 id="第三章语言基础"   >          <a href="#第三章语言基础" class="heading-link"><i class="fas fa-link"></i></a><a href="#第三章语言基础" class="headerlink" title="第三章语言基础"></a>第三章语言基础</h1>              <h2 id="语法"   >          <a href="#语法" class="heading-link"><i class="fas fa-link"></i></a><a href="#语法" class="headerlink" title="语法"></a>语法</h2>      <p>区分大小写，标识符支持数字、字母、下划线、美元符号，按照惯例，标识符应使用驼峰命名法。推荐加上分号，但不是必须的。</p>        <h3 id="变量"   >          <a href="#变量" class="heading-link"><i class="fas fa-link"></i></a><a href="#变量" class="headerlink" title="变量"></a>变量</h3>              <h3 id="var-关键字"   >          <a href="#var-关键字" class="heading-link"><i class="fas fa-link"></i></a><a href="#var-关键字" class="headerlink" title="var 关键字"></a><code>var</code> 关键字</h3>      <p>可以保存任何类型的值，在未初始化的时候保存<code>undefined</code> </p><p>var 声明作用域，用var声明的变量会成为函数内部的局部变量</p><p><code>let</code>关键字：let关键字声明的范围是块级作用域，var声明的是函数作用域，let声明的变量不能在块外被引用</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(ture) &#123;</span><br><span class="line">   <span class="keyword">let</span> age = <span class="number">26</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(age); <span class="comment">//26</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">26</span>); <span class="comment">//未定义</span></span><br></pre></td></tr></table></div></figure><p>let也不允许冗余声明</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name;</span><br><span class="line"><span class="keyword">var</span> name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> age;</span><br><span class="line"><span class="keyword">let</span> age; <span class="comment">//syntax error 重复定义</span></span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p>暂时性死区：在let声明前执行的瞬间</p><p>var和let定义变量的区别就是let声明的变量不会被提升</p><p>let声明的全局变量不会变成window对象属性</p><p>在for循环中使用let声明变量：推荐</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i) <span class="comment">//5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">    <span class="comment">//TODO</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i) <span class="comment">//未定义</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(i)  <span class="comment">//5，5，5，5，5</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(i)  <span class="comment">//1,2,3,4,5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h3 id="const关键字"   >          <a href="#const关键字" class="heading-link"><i class="fas fa-link"></i></a><a href="#const关键字" class="headerlink" title="const关键字"></a><code>const</code>关键字</h3>      <p>const的行为与let基本一致，唯一一个重要的区别是用它声明变量必须初始化变量，尝试修改内容时也会报错，const声明的限制只适用于对它指向的变量的引用，如果const声明了一个对象，修改对象内部的值并不会报错，由于var怪异的行为导致各种问题，所以优先推荐使用const，其次是let</p>        <h2 id="数据类型"   >          <a href="#数据类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2>      <p>6种简单数据类型：undefined null boolean number string symbol 复杂数据类型：object</p><p><code>typeof</code>在检测声明未定义的变量或者未声明的变量时都是undefined</p><p>数值转换：<code>Number(),parseInt(),parseFloat()</code></p><p>number函数基于如下规则执行转换：</p><ul><li>布尔值，true转换为1，false转换为0；</li><li>数值，直接返回；</li><li>null，返回0；</li><li>undefined，返回NAN；</li><li>字符串，应用以下规则：<ul><li>如果字符串包含数值字符，包括数值字符前的加减号，转换为一个十进制的数值</li><li>如果字符串包含有效的浮点值格式则转化为浮点值</li><li>如果字符串包含有效的十六进制，则转换为对应的十进制值</li><li>如果是空则返回0</li><li>如果含有其他字符则返回0</li></ul></li><li>对象，调用valueOf()方法，并按照上述规则转换返回的值，如果结果是NaN，则调用toString()方法，再按照转换字符串的方法</li></ul><p>toString()函数遵循以下规则</p><ul><li>如果值有toString方法，则调用该方法并返回结果；</li><li>如果值是null则返回”null”</li><li>如果值是undefined则返回”undefined”</li></ul><p>模板字符串</p>        <h2 id="symbol类型"   >          <a href="#symbol类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#symbol类型" class="headerlink" title="symbol类型"></a>symbol类型</h2>      <p>用途是确保对象属性使用唯一标识符，不会发生属性冲突的危险</p><p>使用：符号需要用Symbol函数初始化，调用symbol函数时也可以传入一个字符串参数作为对符号的描述</p><p>使用符号作为属性：</p><p>凡是可以使用字符串或数值作为属性的地方，都可以使用符号。包括了对象字面量属性和object.defineproperty()定义的属性。对象字面量只能在计算属性语法中使用符号作为属性</p>        <h2 id="操作符"   >          <a href="#操作符" class="heading-link"><i class="fas fa-link"></i></a><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2>      <p>一元操作符</p><p>位操作符</p><p>布尔操作符</p><p>乘性操作符</p><p>除法操作符</p><p>取模操作符</p><p>指数操作符：math.pow()</p><p>加性操作符</p><p>减法操作符</p><p>关系操作符</p><p>相等操作符</p><p>条件操作符</p><p>赋值操作符</p><p>逗号操作符</p>        <h2 id="语句"   >          <a href="#语句" class="heading-link"><i class="fas fa-link"></i></a><a href="#语句" class="headerlink" title="语句"></a>语句</h2>      <p>if语句</p><p>do….while语句</p><p>while语句</p><p>for语句</p><p>for   in   语句,是一种严格的迭代语句，用于枚举对象中的非符号属性</p><p>for    of语句，是一种严格的迭代对象，用于遍历可迭代对象元素</p><p>break和continue语句</p><p>with语句：将代码作用域设置为特定的对象</p><p>Switch语句</p><p>函数</p>        <h1 id="第四章变量作用域与内存"   >          <a href="#第四章变量作用域与内存" class="heading-link"><i class="fas fa-link"></i></a><a href="#第四章变量作用域与内存" class="headerlink" title="第四章变量作用域与内存"></a>第四章变量作用域与内存</h1>              <h3 id="原始值与引用值"   >          <a href="#原始值与引用值" class="heading-link"><i class="fas fa-link"></i></a><a href="#原始值与引用值" class="headerlink" title="原始值与引用值"></a>原始值与引用值</h3>      <p>javascript不允许直接访问内存位置，实际上操作的是对对象的引用，保存引用值的变量就是按引用访问的</p>        <h3 id="动态属性"   >          <a href="#动态属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#动态属性" class="headerlink" title="动态属性"></a>动态属性</h3>      <p>引用值可以随时添加、修改、和删除其属性和方法，只有引用值可以动态添加后面可以使用的属性</p>        <h3 id="复制值"   >          <a href="#复制值" class="heading-link"><i class="fas fa-link"></i></a><a href="#复制值" class="headerlink" title="复制值"></a>复制值</h3>      <p>引用值和原始值在通过变量复制时也有所不同。在通过变量把一个原始值赋值到另一个变量时，原始值会被复制到新变量的位置。在把引用值从一个变量赋值给另一个变量时，储存在变量中的值也会被复制到新变量所在的位置。区别在于，这里复制的值实际上是一个指针，他指向储存在堆内存中的对象。操作完成后，两个变量实际上指的是同一个对象</p>        <h3 id="typeof"   >          <a href="#typeof" class="heading-link"><i class="fas fa-link"></i></a><a href="#typeof" class="headerlink" title="typeof"></a>typeof</h3>      <p>typeof虽然对原始值很有用，但对引用值作用不大，因此提出了<code>instanceof</code>操作符语法如下<code>result = variable instanceof constructor  </code></p>        <h3 id="执行上下文和作用域"   >          <a href="#执行上下文和作用域" class="heading-link"><i class="fas fa-link"></i></a><a href="#执行上下文和作用域" class="headerlink" title="执行上下文和作用域"></a>执行上下文和作用域</h3>      <p>变量函数的上下文决定了他们可以访问哪些数据，以及他们的行为每个上下文都有一个关联的变量对象。全局上下文是最外层的上下文。在浏览器中全局上下文是window对象，通过var定义的全局变量和函数都会成为window对象的属性和方法。使用let和const的顶级声明不会定义在全局上下文中。</p><p>上下文中的代码在执行的时候会创建变量对象的一个作用链</p> <figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> color = <span class="string">&quot;blue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeColor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> anotherColor = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">swapColor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> tempColor = anotherColor;</span><br><span class="line">        anotherColor = color;</span><br><span class="line">        color = tempColor;</span><br><span class="line">    &#125;</span><br><span class="line">    swapColor();</span><br><span class="line">    <span class="built_in">console</span>.log(color);</span><br><span class="line">    <span class="built_in">console</span>.log(anotherColor);</span><br><span class="line">    <span class="comment">//console.log(tempColor); //undefined</span></span><br><span class="line">&#125;</span><br><span class="line">changeColor()</span><br></pre></td></tr></table></div></figure><img src="https://i.loli.net/2021/07/16/j4C5s9bYnd7GgQN.png" alt="image-20210716171056253" style="zoom: 33%;" /><p>内部上下文可以通过作用域链访问外部上下文中的一切，但外部上下文无法访问内部上下文中的任何东西。上下文之间是线性的有序的，任何上下文都不能到下一级上下文中去搜索</p>        <h3 id="作用域增强"   >          <a href="#作用域增强" class="heading-link"><i class="fas fa-link"></i></a><a href="#作用域增强" class="headerlink" title="作用域增强"></a>作用域增强</h3>      <p>某些语句会导致在作用域链前段临时添加上下文，这个上下文在代码执行后会被删除。通常在两种情况下会出现这种情况：</p><p>try/catch语句的catch块：创建一个新的变量，这个变量会包含要抛出的错误对象声明</p><p>with语句：像作用域链前端添加指定声明对象</p><blockquote><p>不建议使用with，因为他可能是混淆错误和兼容性的根源。</p></blockquote>        <h3 id="变量声明"   >          <a href="#变量声明" class="heading-link"><i class="fas fa-link"></i></a><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h3>      <p>let的作用域是块级的，块级作用域是由最近的一对花括号界定的。也就是，if/while/function甚至是单独的let，重复的let声明同样会报错。</p><p>const变量一经声明就无法在改变。</p>        <h3 id="垃圾回收"   >          <a href="#垃圾回收" class="heading-link"><i class="fas fa-link"></i></a><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h3>      <p>JavaScript是使用垃圾回收的语言，也就是说执行环境负责在代码执行时管理内存。</p><p>垃圾回收两种策略：</p><ul><li>标记清理：把“对象是否不再被需要”简化为“对象是否可以获得”。这个算法假定设置一个叫做根（root）的对象（在Javascript里，根是全局对象）。垃圾回收器将定期从根开始，找所有从根开始引用的对象，然后找这些对象引用的对象……从根开始，垃圾回收器将找到所有可以获得的对象和收集所有不能获得的对象。</li><li>不常用的回收机制：引用计数，这是最初级的垃圾收集算法。此算法把“对象是否不再需要”简化定义为“对象有没有其他对象引用到它”。如果没有引用指向该对象（零引用），对象将被垃圾回收机制回收。</li></ul>        <h1 id="第五章基本引用类型"   >          <a href="#第五章基本引用类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#第五章基本引用类型" class="headerlink" title="第五章基本引用类型"></a>第五章基本引用类型</h1>              <h2 id="date"   >          <a href="#date" class="heading-link"><i class="fas fa-link"></i></a><a href="#date" class="headerlink" title="date"></a>date</h2>      <p>date类型将日期保存为自协调世界时，从1970年1月1日0时至今所经过的毫秒数，使用这种储存格式，date类型可以精确表示1970/1/1之前及以后2856160年的日期。</p><p>​    创建日期对象    <code>let now = new Date()</code> </p><p><img src="https://i.loli.net/2021/07/19/u6IR5mKG1yekjL2.png" alt="image-20210719141519023"></p><p><code>Date.parse()</code>将标准日期转化为毫秒数</p><p><img src="https://i.loli.net/2021/07/19/LGZSXMRlmB2xcoh.png" alt="image-20210719143241400"></p>        <h2 id="继承的方法"   >          <a href="#继承的方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#继承的方法" class="headerlink" title="继承的方法"></a>继承的方法</h2>      <p>Date类型重写了<code>toLocaleString()</code> <code> toString()</code> <code> valueOf()</code>  ,toLocaleString()返回与浏览器运行的本地环境一致的时间与日期；toString()方法返回带时区信息的日期和时间；<code> valueOf()</code>返回日期的毫秒显示。</p><p><img src="https://i.loli.net/2021/07/19/baZkBNTFewqI74W.png" alt="image-20210719143748579"></p>        <h2 id="日期格式化的方法"   >          <a href="#日期格式化的方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#日期格式化的方法" class="headerlink" title="日期格式化的方法"></a>日期格式化的方法</h2>      <ul><li>toDataString:显示日期中的周几、年月日</li><li>toTimeSring：显示日期中的时分秒</li><li>toLocaleDateString：显示年月日</li><li>toLocaleTimeString：显示时分秒</li><li>toUTCString：显示完整UTC时间</li></ul>        <h2 id="日期-时间组件方法"   >          <a href="#日期-时间组件方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#日期-时间组件方法" class="headerlink" title="日期/时间组件方法"></a>日期/时间组件方法</h2>      <p><span class="exturl"><a class="exturl__link"   href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date" >Date</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="RegExp"   >          <a href="#RegExp" class="heading-link"><i class="fas fa-link"></i></a><a href="#RegExp" class="headerlink" title="RegExp"></a>RegExp</h2>      <p>通过regexp类型支持正则表达式，正则表达式使用类似Perl的语法创建：<code> let expression = /pattern/flags</code></p><p>每个正则表达式可以携带多个或零个flags，用于控制正则表达式的行为。</p><ul><li>g：全局模式，表示查找字符串的全部内容，而不是找到第一个内容就结束。</li><li>i：不区分大小写，表示在查找匹配时忽略大小写</li><li>m：多行模式，表示查找到一行文本末尾时会继续查找</li><li>y：粘附模式，表示只查找从lastIndex开始之后的字符串</li><li>u：Unicode模式，启用Unicode匹配</li><li>s：dotAll模式，表示元字符串，匹配任何字符</li></ul><p>使用不同的模式和标记可以创建出各种正则表达式</p> <figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//匹配字符串中的所有 at</span></span><br><span class="line"><span class="keyword">let</span> patern = <span class="regexp">/at/g</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配第一个bat或者cat</span></span><br><span class="line"><span class="keyword">let</span> pattern = <span class="regexp">/[bc]at/i</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配所有以at结尾的三字符组合，忽略大小写</span></span><br><span class="line"><span class="keyword">let</span> pattern = <span class="regexp">/.at/gi</span>;</span><br></pre></td></tr></table></div></figure><p>元字符转义</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//匹配第一个bat或者cat</span></span><br><span class="line"><span class="keyword">let</span> pattern = <span class="regexp">/[bc]at/i</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配第一个[bc]at</span></span><br><span class="line"><span class="keyword">let</span> pattern = <span class="regexp">/\[bc\]at/i</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配所有以at结尾的三字符组合，忽略大小写</span></span><br><span class="line"><span class="keyword">let</span> pattern = <span class="regexp">/.at/gi</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配所有.at，忽略大小写</span></span><br><span class="line"><span class="keyword">let</span> parrent = <span class="regexp">/\.at/gi</span>;</span><br></pre></td></tr></table></div></figure>        <h2 id="单例内置对象"   >          <a href="#单例内置对象" class="heading-link"><i class="fas fa-link"></i></a><a href="#单例内置对象" class="headerlink" title="单例内置对象"></a>单例内置对象</h2>      <p>Global</p><ol><li>URL编码</li><li>eval（）方法</li><li>Global对象属性</li><li>window对象</li></ol><p>Math</p><ol><li>Math对象属性</li><li>min()和max()方法</li><li>舍入方法</li><li>random方法</li><li>其他方法</li></ol>        <h1 id="第六章集合引用类型"   >          <a href="#第六章集合引用类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#第六章集合引用类型" class="headerlink" title="第六章集合引用类型"></a>第六章集合引用类型</h1>              <h2 id="Object"   >          <a href="#Object" class="heading-link"><i class="fas fa-link"></i></a><a href="#Object" class="headerlink" title="Object"></a>Object</h2>      <p>创建Object实例</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">person.name=<span class="string">&quot;吴亦凡&quot;</span>;</span><br><span class="line">person.aga = <span class="number">28</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> person=&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;吴亦凡&quot;</span>;</span><br><span class="line">    age:<span class="number">28</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="Array"   >          <a href="#Array" class="heading-link"><i class="fas fa-link"></i></a><a href="#Array" class="headerlink" title="Array"></a>Array</h2>      <p>创建数组</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"><span class="keyword">let</span> list = [];</span><br></pre></td></tr></table></div></figure><p>array构造函数还有两个es6新增的用于创建数组的静态方法：from(),of()。from用于将类数组结构转换为数组，of将一组参数转换为数组实例</p>        <h3 id="迭代器方法"   >          <a href="#迭代器方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#迭代器方法" class="headerlink" title="迭代器方法"></a>迭代器方法</h3>      <p>在es6上，array原型暴露了3个用于检测数组内容的方法，key(),values(),entries()。key返回数组索引的迭代器，values返回数组元素迭代器，entries返回索引/值对的迭代器</p><p><img src="https://i.loli.net/2021/07/19/vCKJjB9xnFa3Utd.png" alt="image-20210719174600191"></p>        <h3 id="复制和填充方法"   >          <a href="#复制和填充方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#复制和填充方法" class="headerlink" title="复制和填充方法"></a>复制和填充方法</h3>      <p>批量复制方法：fill，向一个已有数组中插入部分或全部值</p><p>填充数组方法：copyWithin，按照范围浅复制数组中的部分内容，将他们插入到指定索引开始的位置。开始索引和结束索引则与fill使用方法相同</p>        <h3 id="转换方法"   >          <a href="#转换方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#转换方法" class="headerlink" title="转换方法"></a>转换方法</h3>      <p>toString()返回由数组中每个值的等效字符串拼接而成的字符串</p><p>valueOf()返回数组本身</p><p><img src="https://i.loli.net/2021/07/20/XFtBOJuweziK4qg.png" alt="image-20210720144214530"></p>        <h3 id="栈方法"   >          <a href="#栈方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#栈方法" class="headerlink" title="栈方法"></a>栈方法</h3>      <ul><li>push()</li><li>pop()</li></ul>        <h3 id="队列方法"   >          <a href="#队列方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#队列方法" class="headerlink" title="队列方法"></a>队列方法</h3>      <ul><li>shift():删除数组的第一项并返回</li><li>push():在末尾添加数据</li></ul>        <h3 id="排序方法"   >          <a href="#排序方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#排序方法" class="headerlink" title="排序方法"></a>排序方法</h3>      <ul><li><p>reverse():将数组元素反向排序</p></li><li><p>sort()：按升序对数组排序</p><p>sort方法可以接受一个比较函数</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compare</span>(<span class="params">value1,value2</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(value1 &lt; value2)&#123;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(value1 &gt; value2)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> values= [<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line">values.sort(compare);</span><br><span class="line"><span class="built_in">console</span>.log(values); </span><br><span class="line"><span class="comment">//[ 0, 1, 5, 6, 9, 10 ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//简写为箭头函数</span></span><br><span class="line">values.sort(<span class="function">(<span class="params">a,b</span>) =&gt;</span>a&lt;b?<span class="number">1</span>:a&gt;b?-<span class="number">1</span>:<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h3 id="操作方法"   >          <a href="#操作方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h3>      <p>conat()：创建一个数组副本，把参数添加到副本末尾，最后返回一个新的数组</p><p>slice()：接受一个或两个参数：返回元素开始索引和结束索引，如果只有一个参数则slice会返回索引到数组末尾的所有元素，如果有两个参数，则slice返回从开始索引到结束索引对应的所有元素，其中不包括结束索引对应的元素。</p><p>有三种不同的方式使用这个方法</p><ul><li>删除：需要给splice传入两个参数：要删除的第一个元素的位置和要删除的元素数量</li><li>插入：需要传入三个参数，开始位置，0，和要插入的元素</li><li>替换：需要传入三个参数，开始位置，要删除元素的数量和要插入的任意多个元素</li></ul></li></ul>        <h3 id="搜索和位置方法"   >          <a href="#搜索和位置方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#搜索和位置方法" class="headerlink" title="搜索和位置方法"></a>搜索和位置方法</h3>      <p>ECMAScrip提供两种搜索数组的方法：按严格相等搜索，按断言搜索</p><p>严格相等：</p><ul><li>indexOf()：从前往后搜索</li><li>lastIndexOf():从后往前搜索</li><li>includes()：从前往后搜索</li></ul><p>indexOf和lastIndexOf都要返回要查找的元素在数组中的位置，如果没找到则返回-1，includes返回布尔值</p><p>断言函数：断言函数接收3个参数，元素，索引和数组本身。find()和findIndex()。find返回第一个匹配的元素，findeindex返回第一个匹配的索引</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> popole =[&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;s&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">18</span></span><br><span class="line">&#125;,</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="attr">name</span>:<span class="string">&#x27;e&#x27;</span>,</span><br><span class="line">     <span class="attr">age</span>:<span class="number">56</span></span><br><span class="line"> &#125;];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(people.find(element,index,array) =&gt; element.age&lt;<span class="number">28</span>);</span><br><span class="line"><span class="built_in">console</span>.log(people.findIndex(element,index,array)=&gt;element.age&lt;<span class="number">28</span>);</span><br></pre></td></tr></table></div></figure>        <h3 id="迭代方法"   >          <a href="#迭代方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#迭代方法" class="headerlink" title="迭代方法"></a>迭代方法</h3>      <ul><li>every():对数组每一项都运行传入的函数，如果每一项都返回true则方法返回true</li><li>filter()：对数组每一项都运行传入的函数，函数返回true的项目会形成数组返回</li><li>forEach()：对数组每一项都运行传入的函数，没有返回值</li><li>map()：对数组每一项都运行传入的函数，返回由每次函数调用返回的结果构成的数组</li><li>some()：对数组每一项都运行传入的函数，如果有一项返回true则这个方法返回true</li></ul>        <h3 id="归并方法"   >          <a href="#归并方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#归并方法" class="headerlink" title="归并方法"></a>归并方法</h3>      <p>reduce()：从数组第一项遍历到最后一项</p><p>reduceRight()：从最后一项遍历到第一项</p><p>两个方法都接收4个参数：上一个归并值，当前项，当前项索引，数组本身。</p>        <h3 id="定型数组"   >          <a href="#定型数组" class="heading-link"><i class="fas fa-link"></i></a><a href="#定型数组" class="headerlink" title="定型数组"></a>定型数组</h3>              <h2 id="map"   >          <a href="#map" class="heading-link"><i class="fas fa-link"></i></a><a href="#map" class="headerlink" title="map"></a>map</h2>      <p>作为es6新特性map是一种新的集合类型，为这门语言带来了真正的键值储存机制</p>        <h3 id="基本api"   >          <a href="#基本api" class="heading-link"><i class="fas fa-link"></i></a><a href="#基本api" class="headerlink" title="基本api"></a>基本api</h3>      <p>使用new关键字和map构造函数可以创建一个空映射</p><p><code>const m = new Map();</code></p><p>初始化后可以使用set方法再添加键值对，另外，可以使用get()和has()进行查询，可以通过size属性获取映射中的键值对数量，还可以使用delete和clear删除值。</p><p>map可以使用任何javascript数据类型作为键</p>        <h3 id="顺序与迭代"   >          <a href="#顺序与迭代" class="heading-link"><i class="fas fa-link"></i></a><a href="#顺序与迭代" class="headerlink" title="顺序与迭代"></a>顺序与迭代</h3>      <p>与object类型的一个主要差异是，map实例会维护键值对的插入顺序，因此可以根据插入顺序执行迭代操作。映射实例可以提供一个迭代器（iterator），能以插入顺序生成[key，value]形式的数组。可以通过entries方法取得这个迭代器。</p>        <h3 id="选择Object还是Map"   >          <a href="#选择Object还是Map" class="heading-link"><i class="fas fa-link"></i></a><a href="#选择Object还是Map" class="headerlink" title="选择Object还是Map"></a>选择Object还是Map</h3>      <ul><li>内存占用，固定的内存大小，map比object多存50%的内容</li><li>插入性能，插入速度并不会随着键值对数量而线性增加，如果涉及大量的插入操作，显然map性能更好。</li><li>查找速度，差不多</li><li>删除性能，如果涉及大量删除，选择map</li></ul>        <h2 id="weakmap"   >          <a href="#weakmap" class="heading-link"><i class="fas fa-link"></i></a><a href="#weakmap" class="headerlink" title="weakmap"></a>weakmap</h2>              <h3 id="基本api-1"   >          <a href="#基本api-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#基本api-1" class="headerlink" title="基本api"></a>基本api</h3>      <p>使用new关键字实例化一个空的weakmap</p><p><code>const wm =new WeakMap()</code></p><p><strong>弱映射中的键只能是Object或者继承自object的类型</strong></p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span>   key1 = &#123;<span class="attr">id</span>:<span class="number">1</span>&#125;,</span><br><span class="line">        key2 = &#123;<span class="attr">id</span>:<span class="number">2</span>&#125;,</span><br><span class="line">        key3 = &#123;<span class="attr">id</span>:<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> wm1 = <span class="keyword">new</span> <span class="built_in">WeakMap</span>(</span><br><span class="line">    [</span><br><span class="line">        [key1,<span class="string">&quot;val1&quot;</span>],</span><br><span class="line">        [key2,<span class="string">&quot;val2&quot;</span>],</span><br><span class="line">        [key3,<span class="string">&quot;val3&quot;</span>]</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(wm1.get(key1));</span><br></pre></td></tr></table></div></figure>        <h3 id="不可迭代键"   >          <a href="#不可迭代键" class="heading-link"><i class="fas fa-link"></i></a><a href="#不可迭代键" class="headerlink" title="不可迭代键"></a>不可迭代键</h3>      <p>因为weakmap中键值对任何时候都有可能被销毁，所以没必要提供迭代键值对的能力，</p>        <h2 id="Set"   >          <a href="#Set" class="heading-link"><i class="fas fa-link"></i></a><a href="#Set" class="headerlink" title="Set"></a>Set</h2>      <p><code>const m =new Set() </code></p><p>使用add增加值，使用has查询值，通过size获取元素数量，使用delete和clear删除元素，set中可以包含任何JavaScript数据类型作为值。</p>        <h3 id="顺序与迭代-1"   >          <a href="#顺序与迭代-1" class="heading-link"><i class="fas fa-link"></i></a><a href="#顺序与迭代-1" class="headerlink" title="顺序与迭代"></a>顺序与迭代</h3>      <p>set会维护值插入时的顺序，因此支持按顺序迭代，</p><p>集合实例可以提供一个迭代器，能以插入顺序生成集合内容。可以通过values方法及其别名方法keys取得这个迭代器。</p>        <h2 id="WeakSet"   >          <a href="#WeakSet" class="heading-link"><i class="fas fa-link"></i></a><a href="#WeakSet" class="headerlink" title="WeakSet()"></a>WeakSet()</h2>              <h1 id="第七章迭代器与生成器"   >          <a href="#第七章迭代器与生成器" class="heading-link"><i class="fas fa-link"></i></a><a href="#第七章迭代器与生成器" class="headerlink" title="第七章迭代器与生成器"></a>第七章迭代器与生成器</h1>              <h2 id="理解迭代"   >          <a href="#理解迭代" class="heading-link"><i class="fas fa-link"></i></a><a href="#理解迭代" class="headerlink" title="理解迭代"></a>理解迭代</h2>      <p>在JavaScript中，计数循环就是一种最简单的循环，循环是迭代机制的基础，因为它可以指定迭代的次数。以及每次迭代要进行的操作。</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> index = <span class="number">0</span>;index&lt;list.length;++index)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(list[index])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>因为数组有已知长度，且数组每一项都可以通过索引获取，所以整个数组可以通过递增索引来遍历，由于以下原因通过这种循环来执行例程并不理想：</p><ul><li>迭代前需要事先知道如何使用数据结构，数组中的每一项都只能先通过引用取得数组对象，然后再通过<code>[]</code>操作符取得特定索引位置上的项。这种情况并不适用于所有数据结构</li><li>遍历顺序并不是数据结构固有的。通过递增索引来访问数据是特定与数组类型的方式，并不适用于其他具有隐式顺序的数据结构</li></ul><p>es5新增了forEach方法。向通用迭代需求迈进了一步。</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>];</span><br><span class="line">list.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span><span class="built_in">console</span>.log(item));</span><br></pre></td></tr></table></div></figure><p>缺点：没有办法标识迭代何时终止，因此这个方法只适用于数组，而且回调结构也比较笨拙。</p>        <h2 id="迭代器模式"   >          <a href="#迭代器模式" class="heading-link"><i class="fas fa-link"></i></a><a href="#迭代器模式" class="headerlink" title="迭代器模式"></a>迭代器模式</h2>      <p><strong>迭代器模式</strong>描述了一个方案，把有些结构称为可迭代对象，因为他们实现了正式的Iterable接口，而且可以通过迭代器Iterator消费。可迭代对象是是一种抽象的说法，基本上，可以把迭代对象理解为数组或集合这样的集合类型的对象。他们包含的元素是有限的，而且都具有无歧义的遍历顺序。任何实现Iterable接口的数据结构都可以被实现Iterator接口的结构消费。迭代器是按需创建的一次性对象，每个迭代器都会关联一个可迭代对象，迭代器会暴露迭代其关联可迭代对象的api。</p><p><strong>迭代器</strong>：就是一个拥有next()方法的特殊对象，每次调用next()都返回一个结果对象。</p>        <h3 id="可迭代协议"   >          <a href="#可迭代协议" class="heading-link"><i class="fas fa-link"></i></a><a href="#可迭代协议" class="headerlink" title="可迭代协议"></a>可迭代协议</h3>      <p>实现Iterable接口要求同时具备两种能力，支持迭代的自我识别能力和创建实现Iterator接口的对象能力。在ecmascri中这意味着必须暴露一个属性作为默认迭代器，而这个属性必须使用特殊的Symbol.iterator作为键。</p><p>很多类型都实现了Iterator接口</p><ul><li>字符串</li><li>数组</li><li>映射</li><li>集合</li><li>arguments对象</li><li>NodeList等Dom集合类型</li></ul><p>检查是否存在默认迭代器属性可以暴露这个工厂函数</p><p><code>console.log(num[Symbol.iteror])    //undefined</code></p><p>实际写代码过程中，不需要显示调用这个工厂函数来生成迭代器，实现可迭代协议的所有类型都会自动兼容接收可迭代对象的任何语言特性，接收可迭代对象的原生语言特性包括：</p><ul><li><p>for-of循环</p></li><li><p>数组解构</p></li><li><p>扩展操作符</p></li><li><p>Array.from()</p></li><li><p>创建集合</p></li><li><p>创建映射</p></li><li><p>Promise.all()接收由期约组成的可迭代对象</p></li><li><p>Promise.race()接收由期约组成的可迭代对象</p></li><li><p>yield*操作符，在生成器中使用</p><p>这些原生的语言结构会在后台调用提供可迭代对象这个工厂函数，从而创建迭代器：</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr [<span class="string">&#x27;foo&#x27;</span>,<span class="string">&#x27;bar&#x27;</span>,<span class="string">&#x27;baz&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> el <span class="keyword">of</span> arr)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(el);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure></li></ul>        <h3 id="迭代器协议"   >          <a href="#迭代器协议" class="heading-link"><i class="fas fa-link"></i></a><a href="#迭代器协议" class="headerlink" title="迭代器协议"></a>迭代器协议</h3>      <p>  迭代器是一种一次性使用的对象，用于迭代与其关联的可迭代对象。迭代器api使用next()方法在可迭代对象中遍历数据。每次成功调用next()都会返回一个IteratorResult对象，其中包含迭代器返回下一个值，若不调用next()则无法知道迭代器当前的位置。next()方法放回的迭代器对象IteratorReasolt包含两个属性：done和value。done是一个布尔值，表示是否还可以再次调用next()取得下一个值。value包含可迭代对象的下一个值，或者undefined；done为true状态为耗尽</p>        <h2 id="生成器"   >          <a href="#生成器" class="heading-link"><i class="fas fa-link"></i></a><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h2>      <p>生成器是一种返回迭代器的函数，通过function关键字后的星号表示，函数中会用到新的关键字yield</p>        <h3 id="生成器基础"   >          <a href="#生成器基础" class="heading-link"><i class="fas fa-link"></i></a><a href="#生成器基础" class="headerlink" title="生成器基础"></a>生成器基础</h3>      <p>生成器的形式是一个函数，函数名称前边加一个*，表示他是一个生成器。只要是可以定义函数的地方，就可以定义生成器。</p><p><code>function *generatorFn()&#123;&#125;</code></p><p>生成器函数表达式</p><p><code>let generatorFn = function *()&#123;&#125;</code></p><p>作为对象字面量方法的生成器函数</p><p><code>let foo =&#123;</code></p><p><code>* genertorFn()&#123;&#125;</code></p><p><code>&#125;</code></p><p>……..</p><p>调用生成器函数会产生一个生成器对象，生成器对象一开始处于暂停执行状态。与迭代器相似，生成器对象也实现了Itreator接口，因此具有next方法。调用这个方法会让生成器开始或恢复执行</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> *<span class="title">generatorFn</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"><span class="keyword">const</span> g = generatorFn();</span><br><span class="line"><span class="built_in">console</span>.log(g);</span><br><span class="line"><span class="built_in">console</span>.log(g.next);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Object [Generator] &#123;&#125;</span></span><br><span class="line"><span class="comment">[Function: next]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></div></figure><p>next方法的返回值类似于迭代器，有一个done属性和一个value属性。函数体为空的生成器函数中间不会停留，调用一次next就会让生成器达到done：true的状态</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> *<span class="title">createIterator</span>(<span class="params">items</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;items.length; i++) &#123;</span><br><span class="line">        <span class="keyword">yield</span> items[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> iterator = createIterator([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 既然生成器返回的是迭代器，自然就可以调用迭代器的next()方法</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next());  <span class="comment">// &quot;&#123; value: 1, done: false&#125;&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next());  <span class="comment">// &quot;&#123; value: 2, done: false&#125;&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next());  <span class="comment">// &quot;&#123; value: 3, done: false&#125;&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next());  <span class="comment">// &quot;&#123; value: undefiend, done: true&#125;&quot;</span></span><br><span class="line"><span class="comment">// 之后所有的调用都会返回相同内容</span></span><br><span class="line"><span class="built_in">console</span>.log(iterator.next());  <span class="comment">// &quot;&#123; value: undefiend, done: true&#125;&quot;</span></span><br></pre></td></tr></table></div></figure>        <h1 id="第八章-对象、类与面向对象编程"   >          <a href="#第八章-对象、类与面向对象编程" class="heading-link"><i class="fas fa-link"></i></a><a href="#第八章-对象、类与面向对象编程" class="headerlink" title="第八章 对象、类与面向对象编程"></a>第八章 对象、类与面向对象编程</h1>              <h3 id="属性的类型"   >          <a href="#属性的类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#属性的类型" class="headerlink" title="属性的类型"></a>属性的类型</h3>      <p>ecma-262使用了一些内部特性来描述属性的特征。这些特性是由为js实现引擎的规范定义的，因此开发者不能在js中直接访问。属性分为两种：数据属性和访问属性</p><ol><li><p>数据属性：数据属性包含一个保存数据的位置。数据属性有4个特性描述他们的行为</p><ul><li>[[Configurable]]:是否可以删除重新定义</li><li>[[Enunberable]]:是否可以通过for-in循环返回</li><li>[[Writeable]]：是否可以被修改</li><li>[[Value]]：包含属性实际的值</li></ul><p>要修改属性的默认特性，就必须使用Object.defineProperty（）方法，这个方法接收3个参数：要给其添加的属性的对象，属性的名称和一个描述符对象。描述对象上的属性可以包括：configurable，enumerable，writable，value。</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="built_in">Object</span>.defineProperty(person,<span class="string">&#x27;name&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">writable</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="attr">value</span>:<span class="string">&quot;Nicholas&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(person.name);</span><br><span class="line">person.name = <span class="string">&#x27;Greg&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(person.name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>这个例子创建了一个名为name的属性并给他赋予一个只读的值。这个属性不能在修改了</p></li><li><p>访问器属性</p><p>访问器属性不包含数据值。相反，他们包含一个获取函数（getter）和一个设置函数（setter），不过这两个函数并不是必须的。在读取访问器属性时，会调用获取函数，这个函数会返回一个有效值。在写入访问器属性时，会调用设置函数并传入新值。访问器属性有4个特性描述他们的行为</p><ul><li>[[Configurable]]:表示属性是否可以通过delete删除并重新定义，是否可以修改它的特性。</li><li>[[Enumerable]]:表示是否可以通过for-in循环返回</li><li>[[Get]]:获取函数，在读取属性时调用。默认值undefined</li><li>[[Set]]:设置函数，在写入属性时调用。默认值undefined</li></ul></li></ol>        <h3 id="读取属性的特性"   >          <a href="#读取属性的特性" class="heading-link"><i class="fas fa-link"></i></a><a href="#读取属性的特性" class="headerlink" title="读取属性的特性"></a>读取属性的特性</h3>      <p>使用Object.getOwnPropertyDescriptor()方法可以取得指定属性的属性描述符。这个方法接收两个参数：属性所在的对象和要取得其描述符的属性名。返回值是一个对象，对于访问器属性包含configurable、enumerable、get、set属性，对于数据属性包含configurable、enumerable、writable和value。</p>        <h3 id="合并对象"   >          <a href="#合并对象" class="heading-link"><i class="fas fa-link"></i></a><a href="#合并对象" class="headerlink" title="合并对象"></a>合并对象</h3>      <p>把源对象所有的本地属性一起复制到目标对象上。这种操作被称为“混入”(mixin)，因为目标对象通过混入源对象的属性得到了增强，es6专门为合并对象提供了Object.assign（）方法。这个方法接收一个目标对象和一个或多个源对象作为参数，然后将每个源对象中可枚举对象和自有属性复制到目标对象。<strong>如果目标对象中的属性具有相同的键，则属性将被源对象中的属性覆盖。后面的源对象的属性将类似地覆盖前面的源对象的属性。</strong></p>        <h3 id="对象标识及相等判定"   >          <a href="#对象标识及相等判定" class="heading-link"><i class="fas fa-link"></i></a><a href="#对象标识及相等判定" class="headerlink" title="对象标识及相等判定"></a>对象标识及相等判定</h3>      <p>es6新增Object.is()方法，用于判断两个参数是否一样</p>        <h3 id="增强对象语法"   >          <a href="#增强对象语法" class="heading-link"><i class="fas fa-link"></i></a><a href="#增强对象语法" class="headerlink" title="增强对象语法"></a>增强对象语法</h3>      <p>简写属性名只要使用变量名就会自动被解释为同名的属性键。如果没有找到同名变量，则会抛出referenceerror</p>        <h3 id="对象解构"   >          <a href="#对象解构" class="heading-link"><i class="fas fa-link"></i></a><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h3>      <figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;Matt&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">27</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123;name,age&#125; = person</span><br><span class="line"><span class="built_in">console</span>.log(name)</span><br><span class="line"><span class="built_in">console</span>.log(age)</span><br></pre></td></tr></table></div></figure>        <h3 id="嵌套结构"   >          <a href="#嵌套结构" class="heading-link"><i class="fas fa-link"></i></a><a href="#嵌套结构" class="headerlink" title="嵌套结构"></a>嵌套结构</h3>      <p>结构对于引用嵌套的属性或赋值目标没有限制。为此，可以通过解构来复制对象属性</p><figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;matt&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">27</span>,</span><br><span class="line">    <span class="attr">job</span>:&#123;</span><br><span class="line">        <span class="attr">title</span>:<span class="string">&quot;SE&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> personCopy = &#123;&#125;;</span><br><span class="line">(&#123;</span><br><span class="line">    <span class="attr">name</span>:personCopy.name,</span><br><span class="line">    <span class="attr">age</span>:personCopy.age,</span><br><span class="line">    <span class="attr">job</span>:personCopy.job</span><br><span class="line">&#125; = person)</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;js阅读笔记，能看多少是多少&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/FLEX%E5%B8%83%E5%B1%80/"/>
    <id>http://example.com/2021/10/28/FLEX%E5%B8%83%E5%B1%80/</id>
    <published>2021-10-28T08:43:39.819Z</published>
    <updated>2021-10-11T08:10:27.044Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="FLEX布局"   >          <a href="#FLEX布局" class="heading-link"><i class="fas fa-link"></i></a><a href="#FLEX布局" class="headerlink" title="FLEX布局"></a>FLEX布局</h1>      <span id="more"></span><p>flex布局即为弹性布局，2009年w3c提出。</p><p>任何一个容器都可以指定为Flex布局</p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>行内元素也可以使用flex布局。</p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:inline-flex</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>设为Flex布局以后子元素的float、clear、vertical-align属性失效</p>        <h2 id="基本概念"   >          <a href="#基本概念" class="heading-link"><i class="fas fa-link"></i></a><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2>      <p>采用Flex布局的的元素称为flex容器，所有子元素自动成为容器成员，称为flex项目，简称项目</p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20210622083318058.png" alt="image-20210622083318058" style="zoom:67%;" /><p>容器默认存在两根轴，水平轴和垂直轴</p>        <h2 id="容器的属性"   >          <a href="#容器的属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#容器的属性" class="headerlink" title="容器的属性"></a>容器的属性</h2>      <figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flex-direction</span><br><span class="line">flex-wrap</span><br><span class="line">flex-flow</span><br><span class="line">justify-content</span><br><span class="line">align-item</span><br><span class="line">align-content</span><br></pre></td></tr></table></div></figure><p>flex-direction属性：</p><p>决定主轴方向</p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">flex-direction</span>:row/row-reverse/colum/column-reverse</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><ul><li>row(默认值)：主轴为水平方向，起点在左端</li><li>row-reverse：主轴为水平方向，起点在右端</li><li>column：主轴在垂直方向，起点在上沿</li><li>column-reverse：主轴为垂直方向，起点在下沿</li></ul><p>flex-wrap属性：</p><p>默认情况下，项目都排在一条线上。flex-wrap属性定义，如果一条轴线排不下如何换行</p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">flex-wrap</span>:nowrap/wrap/wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>nowrap(默认)：不换行。</p><p>wrap：换行，在第一行上方。</p><p>wrap-reverse：换行，在第一行下方。</p><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p><p>justify-content属性</p><p>justify-content属性定义了项目在主轴上的对齐方式。</p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">justify-content</span>:flex-start/flex-end/conter/space-between/space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><ul><li><code>flex-start</code>（默认值）：左对齐</li><li><code>flex-end</code>：右对齐</li><li><code>center</code>： 居中</li><li><code>space-between</code>：两端对齐，项目之间的间隔都相等。</li><li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><p>align-item定义了项目在交叉轴上如何对齐</p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    align-item:flex-start/flex-end/center/baseline/stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><ul><li><code>flex-start</code>：交叉轴的起点对齐。</li><li><code>flex-end</code>：交叉轴的终点对齐。</li><li><code>center</code>：交叉轴的中点对齐。</li><li><code>baseline</code>: 项目的第一行文字的基线对齐。</li><li><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><p>align-content属性定义了多根轴线的对齐方式。如果只有一根轴线，该属性不起作用。</p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">align-content</span>:flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><ul><li><code>flex-start</code>：与交叉轴的起点对齐。</li><li><code>flex-end</code>：与交叉轴的终点对齐。</li><li><code>center</code>：与交叉轴的中点对齐。</li><li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li><code>stretch</code>（默认值）：轴线占满整个交叉轴</li></ul>        <h2 id="项目属性"   >          <a href="#项目属性" class="heading-link"><i class="fas fa-link"></i></a><a href="#项目属性" class="headerlink" title="项目属性"></a>项目属性</h2>      <ul><li><code>order</code></li><li><code>flex-grow</code></li><li><code>flex-shrink</code></li><li><code>flex-basis</code></li><li><code>flex</code></li><li><code>align-self</code></li></ul><p>order定义项目的排列顺序。数值越小，排列约靠前，默认值为0.</p><figure class="highlight css"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">    oreder:&lt;integer&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>flex-grow属性定义项目的放大比例，默认为0，如果所有项目的flexgrow属性都为1，则他们将等分剩余空间。如果一个项目的flex-grow属性为2其他为一，则占据的空间多一倍</p><p>flex-shrink定义了项目的缩小比例</p><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间</p><p>flex属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。后两个属性可选</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;FLEX布局&quot;   &gt;
          &lt;a href=&quot;#FLEX布局&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#FLEX布局&quot; class=&quot;headerlink&quot; title=&quot;FLEX布局&quot;&gt;&lt;/a&gt;FLEX布局&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/flutter/"/>
    <id>http://example.com/2021/10/28/flutter/</id>
    <published>2021-10-28T08:43:39.819Z</published>
    <updated>2021-10-11T08:10:21.555Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="Flutter"   >          <a href="#Flutter" class="heading-link"><i class="fas fa-link"></i></a><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h1>      <span id="more"></span>        <h2 id="dart"   >          <a href="#dart" class="heading-link"><i class="fas fa-link"></i></a><a href="#dart" class="headerlink" title="dart"></a>dart</h2>      <p>dart:谷歌开发的编程语言。</p><p>安装<span class="exturl"><a class="exturl__link"   href="https://blog.csdn.net/weixin_37910453/article/details/94060152" >dart </a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，重启使环境变量生效，使用vscode开发</p><p><code>main()&#123;&#125;</code> 所有函数的入口，<code>void main()&#123;&#125;</code> 表示main方法没有返回值</p><p>注释同JavaScript</p>        <h2 id="dart变量"   >          <a href="#dart变量" class="heading-link"><i class="fas fa-link"></i></a><a href="#dart变量" class="headerlink" title="dart变量"></a>dart变量</h2>      <p><code>var str = &#39;this is var&#39;</code> 自动类型推断</p><p><code>String str = &#39;this is var&#39; </code> 指定类型</p><p><code>int str = 123</code></p>        <h2 id="dart常量"   >          <a href="#dart常量" class="heading-link"><i class="fas fa-link"></i></a><a href="#dart常量" class="headerlink" title="dart常量"></a>dart常量</h2>      <p><code>const</code> <code>final</code> final可以在开始时不赋值，使用时再初始化</p>        <h2 id="dart数组类型"   >          <a href="#dart数组类型" class="heading-link"><i class="fas fa-link"></i></a><a href="#dart数组类型" class="headerlink" title="dart数组类型"></a>dart数组类型</h2>      <p><code>Number:int double</code></p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数值类型</span></span><br><span class="line"> <span class="built_in">int</span> a = <span class="number">123</span>;</span><br><span class="line"> <span class="built_in">double</span> b =<span class="number">1.236</span>; <span class="comment">//既可以是整型，也可以是浮点型</span></span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;<span class="subst">$a</span> <span class="subst">$b</span>&#x27;</span>);</span><br><span class="line"> <span class="built_in">print</span>(a*b);</span><br></pre></td></tr></table></div></figure><p><code>Strings String</code></p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义字符串</span></span><br><span class="line">  <span class="keyword">var</span> str = <span class="string">&#x27;1564896&#x27;</span>;</span><br><span class="line">  <span class="built_in">String</span> str1 = <span class="string">&#x27;12554&#x27;</span>;</span><br><span class="line">  <span class="built_in">print</span>(str);</span><br><span class="line">  <span class="built_in">print</span>(str1);</span><br><span class="line">  <span class="comment">//字符串拼接</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;<span class="subst">$str1</span> <span class="subst">$str</span>&quot;</span>);</span><br><span class="line">  <span class="built_in">print</span>(str1+str);</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><code>Booleans:bool</code></p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">true</span> &amp;&amp; <span class="keyword">false</span></span><br><span class="line"><span class="keyword">if</span>()&#123;&#125;</span><br></pre></td></tr></table></div></figure><p><code>List</code></p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> l1= [<span class="string">&#x27;1&#x27;</span>,<span class="number">1</span>,<span class="number">1.25</span>,<span class="keyword">true</span>];</span><br><span class="line">  <span class="built_in">print</span>(l1.length);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">in</span> l1) &#123;</span><br><span class="line">    <span class="built_in">print</span>(item);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> l2 =&lt;<span class="built_in">String</span>&gt;[<span class="string">&#x27;111&#x27;</span>,<span class="string">&#x27;333&#x27;</span>,<span class="string">&#x27;5555&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> l3 = [];</span><br><span class="line">l3.add(<span class="number">123</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> l4 = <span class="built_in">List</span>.filled(length,fill) <span class="comment">//创建固定长度的集合</span></span><br></pre></td></tr></table></div></figure><p><code>Map</code> </p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义map</span></span><br><span class="line"> <span class="keyword">var</span> person=&#123;</span><br><span class="line">   <span class="string">&quot;name&quot;</span>:<span class="string">&quot;zhangsan&quot;</span>,</span><br><span class="line">   <span class="string">&quot;age&quot;</span>:<span class="number">20</span></span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">print</span>(person);</span><br><span class="line"></span><br><span class="line"> <span class="built_in">print</span>(person[<span class="string">&quot;name&quot;</span>]);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//第二种map</span></span><br><span class="line"> <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line"> p[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;lisi&quot;</span>;</span><br><span class="line"> p[<span class="string">&quot;age&quot;</span>] = <span class="number">22</span>;</span><br><span class="line"> p[<span class="string">&quot;work&quot;</span>] = [<span class="string">&quot;程序员&quot;</span>,<span class="string">&quot;送外卖&quot;</span>];</span><br><span class="line"> <span class="built_in">print</span>(p);</span><br></pre></td></tr></table></div></figure><p>判断数据类型<code>is</code> </p>        <h2 id="算数运算符"   >          <a href="#算数运算符" class="heading-link"><i class="fas fa-link"></i></a><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2>      <p><code>+ - * / % ~/</code></p>        <h2 id="关系运算符"   >          <a href="#关系运算符" class="heading-link"><i class="fas fa-link"></i></a><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2>      <p><code>== != &gt; &lt; &gt;= &lt;=</code></p>        <h2 id="逻辑运算符"   >          <a href="#逻辑运算符" class="heading-link"><i class="fas fa-link"></i></a><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2>      <p><code>！ &amp;&amp; ||</code></p><p>复合赋值运算符</p><p>+=     -=     *=    /=       %=      ~/=</p><p>三目运算符</p><p><code> aaa?bbb:ccc</code> </p>        <h2 id="类型转换"   >          <a href="#类型转换" class="heading-link"><i class="fas fa-link"></i></a><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2>      <p><code>number转string toString()</code> </p><p><code>string转number int.parse</code> </p><p>for循环同其他语言</p>        <h2 id="List"   >          <a href="#List" class="heading-link"><i class="fas fa-link"></i></a><a href="#List" class="headerlink" title="List"></a>List</h2>      <p>list常用属性和方法</p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">list.length</span><br><span class="line">list.add</span><br><span class="line">list.isEmpty</span><br><span class="line">list.reversed</span><br><span class="line">list.addAll</span><br><span class="line">list.indexOf</span><br><span class="line">list.remove</span><br><span class="line">list.removAt</span><br><span class="line">list.fillRange(start,end,target) </span><br><span class="line">list.inert</span><br><span class="line">list.insertAll</span><br><span class="line">list.join <span class="comment">//list转换为字符串</span></span><br><span class="line">list.split <span class="comment">//字符串转化为list</span></span><br><span class="line">forEach方法，map方法，</span><br><span class="line">where返回满足条件的新数组</span><br><span class="line">every每一个元素都满足条件</span><br></pre></td></tr></table></div></figure><p>利用set去重</p>        <h2 id="自定义方法"   >          <a href="#自定义方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#自定义方法" class="headerlink" title="自定义方法"></a>自定义方法</h2>      <figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">返回类型 方法名称 （参数<span class="number">1</span>，参数<span class="number">2.</span>....）&#123;</span><br><span class="line">方法体</span><br><span class="line"><span class="keyword">return</span> 返回值；</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> fangfaming()&#123;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span> aaBcc()&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;str&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> sumnum(n)&#123;</span><br><span class="line">  <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    sum+=i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//可选参数</span></span><br><span class="line"><span class="built_in">String</span> printUserInfo(<span class="built_in">String</span> username,[<span class="built_in">int</span> age])&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;姓名<span class="subst">$username</span>----年龄：<span class="subst">$age</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//命名参数</span></span><br><span class="line"><span class="built_in">String</span> printUserinfo(<span class="built_in">String</span> username,&#123;<span class="built_in">int</span> age,<span class="built_in">String</span> sex =<span class="string">&quot;男&quot;</span>&#125;)&#123;</span><br><span class="line"><span class="keyword">if</span>(age != <span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;姓名<span class="subst">$username</span>----年龄：<span class="subst">$age</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;姓名<span class="subst">$username</span>----年龄保密&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">printUserinfo(<span class="string">&#x27;张三&#x27;</span>,age:<span class="number">20</span>);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//把方法当做参数</span></span><br><span class="line"> fn1()&#123;</span><br><span class="line">     <span class="built_in">print</span>(<span class="string">&#x27;fn1&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">  fn2(fn)&#123;</span><br><span class="line">      fn();</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  fn2(fn1);</span><br></pre></td></tr></table></div></figure>        <h2 id="箭头函数"   >          <a href="#箭头函数" class="heading-link"><i class="fas fa-link"></i></a><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2>      <p><code>var newlist = list.map((value)=&gt;value&gt;2?value*2:value);</code></p>        <h2 id="匿名方法"   >          <a href="#匿名方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#匿名方法" class="headerlink" title="匿名方法"></a>匿名方法</h2>      <figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> getNum(<span class="built_in">int</span> n)&#123;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> printNum=()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;234&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h2 id="自执行方法"   >          <a href="#自执行方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#自执行方法" class="headerlink" title="自执行方法"></a>自执行方法</h2>      <figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;123445&#x27;</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></div></figure>        <h2 id="闭包"   >          <a href="#闭包" class="heading-link"><i class="fas fa-link"></i></a><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2>      <p>全局变量的特点：全局变量常驻内存、全局变量污染全局</p><p>局部变量特点：不常驻内存，会被回收、不污染全局</p><p>闭包可以实现常驻内存、不污染全局</p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">printInfo()&#123;</span><br><span class="line">    <span class="keyword">var</span> myNum = <span class="number">123</span>;</span><br><span class="line">    myNum++;</span><br><span class="line">    <span class="built_in">print</span>(myNum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(myNum); <span class="comment">//错误</span></span><br></pre></td></tr></table></div></figure>        <h2 id="类"   >          <a href="#类" class="heading-link"><i class="fas fa-link"></i></a><a href="#类" class="headerlink" title="类"></a>类</h2>      <figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="built_in">String</span> name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">    <span class="built_in">int</span> age =<span class="number">23</span>;</span><br><span class="line">    <span class="keyword">void</span> getInfo()&#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Person(<span class="built_in">String</span> name,<span class="built_in">int</span> age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;这是构造函数内容，这个方法在实例化时触发&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">    <span class="keyword">var</span> p1 = <span class="keyword">new</span> Person();</span><br><span class="line">    <span class="built_in">print</span>(p1.name);</span><br><span class="line">    p1.getInfo();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>构造函数：运行时自动触发的方法</p><p>定义私有公有方法<code>使用_把一个属性或方法定义为私有</code></p><p>类里的getter和setter修饰符</p><p>正常写法</p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rect</span></span>&#123;</span><br><span class="line">  <span class="built_in">num</span> height;</span><br><span class="line">  <span class="built_in">num</span> width;</span><br><span class="line">  Rect(<span class="keyword">this</span>.height,<span class="keyword">this</span>.width);</span><br><span class="line">  area()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.height*<span class="keyword">this</span>.width;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  Rect r = <span class="keyword">new</span> Rect(<span class="number">10</span>,<span class="number">4</span>);</span><br><span class="line">  <span class="built_in">print</span>(r.area());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>get修饰符</p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rect</span></span>&#123;</span><br><span class="line">  <span class="built_in">num</span> height;</span><br><span class="line">  <span class="built_in">num</span> width;</span><br><span class="line">  Rect(<span class="keyword">this</span>.height,<span class="keyword">this</span>.width);</span><br><span class="line">  <span class="keyword">get</span> area&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.height*<span class="keyword">this</span>.width;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  Rect r = <span class="keyword">new</span> Rect(<span class="number">10</span>,<span class="number">4</span>);</span><br><span class="line">  <span class="built_in">print</span>(r.area);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>set修饰符</p><figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rect</span></span>&#123;</span><br><span class="line">  <span class="built_in">num</span> height;</span><br><span class="line">  <span class="built_in">num</span> width;</span><br><span class="line">  Rect(<span class="keyword">this</span>.height,<span class="keyword">this</span>.width);</span><br><span class="line">  <span class="keyword">get</span> area&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.height*<span class="keyword">this</span>.width;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">set</span> areaHeight(value)&#123;</span><br><span class="line">    <span class="keyword">this</span>.height = value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  Rect r = <span class="keyword">new</span> Rect(<span class="number">10</span>,<span class="number">4</span>);</span><br><span class="line">  r.areaHeight = <span class="number">6</span>;</span><br><span class="line">  <span class="built_in">print</span>(r.area);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h3 id="静态成员、操作符、类的继承"   >          <a href="#静态成员、操作符、类的继承" class="heading-link"><i class="fas fa-link"></i></a><a href="#静态成员、操作符、类的继承" class="headerlink" title="静态成员、操作符、类的继承"></a>静态成员、操作符、类的继承</h3>      <figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">String</span> name = <span class="string">&#x27;zhangsan&#x27;</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> <span class="keyword">show</span>()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;123456&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="built_in">print</span>(Person.name);</span><br><span class="line">  Person.<span class="keyword">show</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>非静态方法可以访问静态成员以及非静态成员</p>        <h2 id="Null-safety"   >          <a href="#Null-safety" class="heading-link"><i class="fas fa-link"></i></a><a href="#Null-safety" class="headerlink" title="Null safety"></a>Null safety</h2>      <p>null safety 可以帮助开发者避免一些日常开发中很难被发现的错误，并且额外的好处是可以改善性能。</p>        <h2 id="flutter安装"   >          <a href="#flutter安装" class="heading-link"><i class="fas fa-link"></i></a><a href="#flutter安装" class="headerlink" title="flutter安装"></a>flutter安装</h2>      <p><em>cmd输入命令闪退</em>：使用powershell</p><p>*The Flutter directory is not a clone of the GitHub project.*：使用<code>git init </code>命令初始化目录</p><p>执行flutter doctor</p>        <h1 id="使用flutter"   >          <a href="#使用flutter" class="heading-link"><i class="fas fa-link"></i></a><a href="#使用flutter" class="headerlink" title="使用flutter"></a>使用flutter</h1>      <figure class="highlight dart"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;package:flutter/material.dart&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main ()&#123;</span><br><span class="line">  runApp(<span class="keyword">new</span> Center(</span><br><span class="line">    child:<span class="keyword">new</span> Text(</span><br><span class="line">      <span class="string">&#x27;你好,flutter&#x27;</span>,</span><br><span class="line">      textDirection: TextDirection.ltr,</span><br><span class="line">    )</span><br><span class="line">  ));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h2 id="组件化开发"   >          <a href="#组件化开发" class="heading-link"><i class="fas fa-link"></i></a><a href="#组件化开发" class="headerlink" title="组件化开发"></a>组件化开发</h2>      <p>StatelessWidget是无状态组件，状态不可变的widget，</p><p>StatefulWidge是有状态组件，持有的状态可能在widget生命周期改变</p><p>MaterialApp是一个方便的Widge它封装了应用程序实现Material Design所需的一些Widget。一般作为顶层widget使用</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Flutter&quot;   &gt;
          &lt;a href=&quot;#Flutter&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#Flutter&quot; class=&quot;headerlink&quot; title=&quot;Flutter&quot;&gt;&lt;/a&gt;Flutter&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/10/28/ajax/"/>
    <id>http://example.com/2021/10/28/ajax/</id>
    <published>2021-10-28T08:43:39.818Z</published>
    <updated>2021-10-11T08:24:16.897Z</updated>
    
    <content type="html"><![CDATA[        <h1 id="ajax学习"   >          <a href="#ajax学习" class="heading-link"><i class="fas fa-link"></i></a><a href="#ajax学习" class="headerlink" title="ajax学习"></a>ajax学习</h1>      <span id="more"></span>        <h2 id="原生ajax"   >          <a href="#原生ajax" class="heading-link"><i class="fas fa-link"></i></a><a href="#原生ajax" class="headerlink" title="原生ajax"></a>原生ajax</h2>      <figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ajax5个步骤</span></span><br><span class="line"><span class="keyword">var</span> xhr = XMLHttpRequest()</span><br><span class="line">xhr.open(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">xhr.send</span><br><span class="line">xhr.onreadystatechchange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>)&#123;</span><br><span class="line">         <span class="built_in">console</span>.log(<span class="string">&#x27;数据返回成功&#x27;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 数据是保存在 异步对象的 属性中</span></span><br><span class="line">                <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 修改页面的显示</span></span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">&#x27;h1&#x27;</span>).innerHTML = xhr.responseText;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">        <span class="string">&#x27;url&#x27;</span>: url,<span class="comment">//请求的url</span></span><br><span class="line">        <span class="string">&#x27;data&#x27;</span>: data,<span class="comment">//请求的参数</span></span><br><span class="line">        <span class="string">&#x27;type&#x27;</span>: post,<span class="comment">//请求的类型</span></span><br><span class="line">        <span class="string">&#x27;dataType&#x27;</span>: json,<span class="comment">//接收数据类型</span></span><br><span class="line">        <span class="string">&#x27;async&#x27;</span>: <span class="literal">true</span>,<span class="comment">//异步请求</span></span><br><span class="line">        <span class="string">&#x27;cache&#x27;</span>: <span class="literal">false</span>,<span class="comment">//浏览器缓存</span></span><br><span class="line">        <span class="string">&#x27;success&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,<span class="comment">//请求成功后执行的函数</span></span><br><span class="line">        <span class="string">&#x27;error&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,<span class="comment">//请求失败后执行的函数</span></span><br><span class="line">        <span class="string">&#x27;jsonpCallback&#x27;</span>: <span class="string">&#x27;jsonp&#x27;</span> + (<span class="keyword">new</span> <span class="built_in">Date</span>()).valueOf().toString().substr(-<span class="number">4</span>),<span class="comment">//通过jsonp跨域请求的回调函数名</span></span><br><span class="line">        <span class="string">&#x27;beforeSend&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;，<span class="comment">//请求前要处理的函数</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">axios.get(<span class="string">&#x27;/user&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    <span class="attr">ID</span>: <span class="number">12345</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">.then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(response);</span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// POST</span></span><br><span class="line">axios.post(<span class="string">&#x27;/user&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Javan&#x27;</span>,</span><br><span class="line">  <span class="attr">website</span>: <span class="string">&#x27;www.javanx.cn&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">.then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(response);</span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>        <h2 id="jq处理ajax"   >          <a href="#jq处理ajax" class="heading-link"><i class="fas fa-link"></i></a><a href="#jq处理ajax" class="headerlink" title="jq处理ajax"></a>jq处理ajax</h2>      <figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $.get(<span class="string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>,&#123;<span class="attr">a</span>:<span class="number">100</span>,<span class="attr">b</span>:<span class="number">200</span>,<span class="attr">c</span>:<span class="number">300</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(data);</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;)</span><br><span class="line">       $(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $.post(<span class="string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>,&#123;<span class="attr">a</span>:<span class="number">100</span>,<span class="attr">b</span>:<span class="number">200</span>,<span class="attr">c</span>:<span class="number">300</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(data);</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;)</span><br><span class="line">       $(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          $.ajax(&#123;</span><br><span class="line">              <span class="attr">url</span>:<span class="string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>,</span><br><span class="line">              <span class="attr">data</span>:&#123;<span class="attr">a</span>:<span class="number">100</span>,<span class="attr">b</span>:<span class="number">1200</span>&#125;,</span><br><span class="line">              <span class="attr">type</span>:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">              <span class="comment">//响应体设置</span></span><br><span class="line">              <span class="attr">dataType</span>:<span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">               <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(data);</span><br><span class="line">               &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></div></figure>        <h2 id="axios"   >          <a href="#axios" class="heading-link"><i class="fas fa-link"></i></a><a href="#axios" class="headerlink" title="axios"></a>axios</h2>      <figure class="highlight js"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    axios.get(<span class="string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>,&#123;</span><br><span class="line">          </span><br><span class="line"></span><br><span class="line">        <span class="attr">params</span>:&#123;</span><br><span class="line">            <span class="attr">id</span>:<span class="number">11</span>,</span><br><span class="line">            <span class="attr">name</span>:<span class="number">3333</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">headers</span>:&#123;</span><br><span class="line">            <span class="attr">height</span>:<span class="number">100</span>,</span><br><span class="line">            <span class="attr">weight</span>:<span class="number">50</span></span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    axios.post(<span class="string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>,&#123;</span><br><span class="line">            <span class="attr">username</span>:<span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">            <span class="attr">pw</span>:<span class="string">&#x27;ervsdgsf&#x27;</span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line">        <span class="attr">params</span>:&#123;</span><br><span class="line">            <span class="attr">id</span>:<span class="number">200</span>,</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;user&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">headers</span>:&#123;</span><br><span class="line">            <span class="attr">height</span>:<span class="number">100</span>,</span><br><span class="line">            <span class="attr">weight</span>:<span class="number">50</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    )</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    axios(&#123;</span><br><span class="line">        <span class="attr">method</span>:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">url</span>:<span class="string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>,</span><br><span class="line">        <span class="attr">params</span>:&#123;</span><br><span class="line">            <span class="attr">vip</span>:<span class="number">10</span>,</span><br><span class="line">            <span class="attr">level</span>:<span class="number">30</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">headers</span>:&#123;</span><br><span class="line">            <span class="attr">a</span>:<span class="number">100</span>,</span><br><span class="line">            <span class="attr">b</span>:<span class="number">200</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">data</span>:&#123;</span><br><span class="line">            <span class="attr">username</span>:<span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">            <span class="attr">pw</span>:<span class="string">&#x27;admin&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ajax学习&quot;   &gt;
          &lt;a href=&quot;#ajax学习&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#ajax学习&quot; class=&quot;headerlink&quot; title=&quot;ajax学习&quot;&gt;&lt;/a&gt;ajax学习&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
